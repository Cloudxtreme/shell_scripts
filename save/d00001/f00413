<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>Asynchronous concurrency with vert.x &#8211; Part 2 | synyx - Blog</title>
<!-- Source File -->
<link href="http://blog.synyx.de/wp-content/themes/synyx_theme/graphics/favicon.ico" rel="shortcut icon" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://blog.synyx.de/wp-content/themes/synyx_theme/styles/style.css" />
<link rel="pingback" href="https://blog.synyx.de/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="synyx rss" href="http://blog.synyx.de/feed/ " />

<!--[if lt IE 9]>
  <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->

                <link href="http://blog.synyx.de/wp-content/themes/synyx_theme/js/google-code-prettify/prettify.css" rel="stylesheet">

    <script src="http://code.jquery.com/jquery-1.5.2.min.js"></script>
    
    <script src="http://blog.synyx.de/wp-content/themes/synyx_theme/js/google-code-prettify/prettify.js"></script>
    <script src="http://blog.synyx.de/wp-content/themes/synyx_theme/js/application.js"></script>
    <script src="http://blog.synyx.de/wp-content/themes/synyx_theme/js/bootstrap-twipsy.js" type="text/javascript"></script>

<link rel="alternate" type="application/rss+xml" title="synyx - Blog &raquo; Feed" href="http://blog.synyx.de/feed/" />
<link rel="alternate" type="application/rss+xml" title="synyx - Blog &raquo; Comments Feed" href="http://blog.synyx.de/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="synyx - Blog &raquo; Asynchronous concurrency with vert.x &#8211; Part 2 Comments Feed" href="http://blog.synyx.de/2013/04/asynchronous-concurrency-with-vert-x-part-2/feed/" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blog.synyx.de/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.synyx.de/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Super Double Senior Expert Software Architect' href='http://blog.synyx.de/2013/04/super-double-senior-expert-software-architect/' />
<link rel='next' title='The Open Source Datacenter Conference 2013' href='http://blog.synyx.de/2013/05/the-open-source-datacenter-conference-2013/' />
<meta name="generator" content="WordPress 3.6" />
<link rel='canonical' href='http://blog.synyx.de/2013/04/asynchronous-concurrency-with-vert-x-part-2/' />
<link rel='shortlink' href='http://blog.synyx.de/?p=4191' />

<!-- platinum seo pack 1.3.7 -->
<meta name="robots" content="index,follow,noodp,noydir" />
<meta name="description" content="CoffeeScript Vert.x supports JavaScript through the Rhino JavaScript engine. Although JavaScript is a decent language once you get to know it, I prefer" />
<meta name="keywords" content="coffeescript,concurrency,javascript,vertx" />
<link rel="canonical" href="http://blog.synyx.de/2013/04/asynchronous-concurrency-with-vert-x-part-2/" />
<!-- /platinum one seo pack -->
<script type='text/javascript' src='https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shCore.js'></script>
<script type='text/javascript' src='https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shAutoloader.js'></script>
<link type='text/css' rel='stylesheet' href='https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/styles/shCore.css'/>
<link type='text/css' rel='stylesheet' href='https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/styles/shThemeDefault.css'/>
<style type="text/css" media="screen">input#akismet_privacy_check { float: left; margin: 7px 7px 7px 0; width: 13px; }</style></head>

<body class="single single-post postid-4191 single-format-standard">

    <div class="container">



<div class="row"><div class="span15" id="header">

  <div id="logo">
    <a href="http://www.synyx.de/"> <img src="http://blog.synyx.de/wp-content/themes/synyx_theme/graphics/logo.png" alt="synyx"> </a>

  </div>

  <nav class="navigation">


<ul>

          <li>
              <a href="http://www.synyx.de/unternehmen/">UNTERNEHMEN</a>
          </li>

          <li>
              <a href="http://www.synyx.de/leistungen/">LEISTUNGEN</a>
          </li>

          <li>
              <a href="http://www.synyx.de/entwicklung/">ENTWICKLUNG</a>
          </li>

          <li>
              <a href="http://www.synyx.de/opensource/">OPEN SOURCE</a>
          </li>

          <li class="active">
              <a href="http://blog.synyx.de/">BLOG</a>
          </li>

</ul>

  </nav>

</div></div>




      <!-- Main hero unit for a primary marketing message or call to action -->
<!--
      <div class="hero-unit" style="position: relative">
                                                                
                                <h1>
                                        <a href="http://blog.synyx.de/" rel="home">synyx &#8211; Blog</a>
                                </h1>
                                <p></p>
      </div>
-->

<div id="access" role="navigation">

                
                
                
</div><!-- #access --><div id="content">
<div class="row">
  <div class="span-two-thirds columns">


        <div class="green topic box">
            <div class="greenContent">


                                        <div class="page-header">
						<h1>
							Asynchronous concurrency with vert.x &#8211; Part 2						</h1>
					</div> <!-- /page-header -->
					<p class="muted">
                                                <span class="meta-prep meta-prep-author">Posted on</span> <a href="http://blog.synyx.de/2013/04/asynchronous-concurrency-with-vert-x-part-2/" title="12:34" rel="bookmark"><span class="entry-date">April 24, 2013</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://blog.synyx.de/author/allmendinger/" title="View all posts by Otto Allmendinger">Otto Allmendinger</a></span>                                                        |
                                                                                                        Posted in <a href="http://blog.synyx.de/category/developerblog/" title="View all posts in Developer Blog" rel="category tag">Developer Blog</a>, <a href="http://blog.synyx.de/category/developerblog/opensource/" title="View all posts in Open Source Blog" rel="category tag">Open Source Blog</a>                                                                                                                                                        |
                                                        Tagged <a href="http://blog.synyx.de/tag/coffeescript/" rel="tag">coffeescript</a>, <a href="http://blog.synyx.de/tag/concurrency/" rel="tag">concurrency</a>, <a href="http://blog.synyx.de/tag/javascript/" rel="tag">javascript</a>, <a href="http://blog.synyx.de/tag/vertx/" rel="tag">vertx</a>                                                                                                                                        </p>
            </div>
        </div>
	<article class="white box">
            <div class="whiteContent">
					
					
		
					<div class="post_content">
						<h1>CoffeeScript</h1>
<p>Vert.x supports JavaScript through the <a href="https://developer.mozilla.org/en/docs/Rhino">Rhino JavaScript engine</a>. Although JavaScript is a decent language once you get to know it, I prefer <a href="http://www.coffeescript.org">CoffeeScript</a>, a language that compiles to JavaScript. Luckily, vert.x has built-in support for CoffeeScript, so I can use it nearly transparently. You will only notice the JavaScript under the hood when reading stack traces, which will refer to the compiled JavaScript file.</p>
<p>For the examples in this blog post, the only thing you need to know a little CoffeeScript:</p>
<pre>
foo = (a, b) -> a + b
</pre>
<p>Translates to the JavaScript code</p>
<pre>
var foo = function (a, b) { 
    return a + b; // (the last statement is returned)
}
</pre>
<p>Also parentheses around function arguments are optional</p>
<pre>
  foo a, b, c 
  # same as
  foo(a, b, c)
</pre>
<p>The translated source code from the example described in the last post is</p>
<pre>
vertx = require 'vertx'

address = 'example.address'

handler = (message, replier) ->
  stdout.println "sender sent " + message

  replier "pong 1", (message, replier) ->
    # and so on

vertx.eventBus.registerHandler address, handler

vertx.eventBus.send address, "ping 1", (message, replier) ->
  stdout.println "handler sent " + message
  replier "ping 2", (message, replier) ->
    # and so on
</pre>
<p>The shorter function declaration notation is a huge improvement, especially when dealing with the kind of callback-heavy code that is prevalent when dealing with asynchronous concurrency.</p>
<h1>The Sleeping Barber Problem</h1>
<p>To challenge vert.x with something more exciting than ping-pong, I decided to model a basic concurrency problem that mirrors some of the challenges that our new application will face - the famous <a href="http://en.wikipedia.org/wiki/Sleeping_barber_problem"> Sleeping Barber Problem</a>:</p>
<blockquote>
<p>The analogy is based upon a hypothetical barber shop with one barber. The barber has one barber chair and a waiting room with a number of chairs in it.  When the barber finishes cutting a customer's hair, he dismisses the customer and then goes to the waiting room to see if there are other customers waiting.  If there are, he brings one of them back to the chair and cuts his hair. If there are no other customers waiting, he returns to his chair and sleeps in it.</p>
<p>Each customer, when he arrives, looks to see what the barber is doing. If the barber is sleeping, then the customer wakes him up and sits in the chair. If the barber is cutting hair, then the customer goes to the waiting room. If there is a free chair in the waiting room, the customer sits in it and waits his turn. If there is no free chair, then the customer leaves. Based on a naïve analysis, the above description should ensure that the shop functions correctly, with the barber cutting the hair of anyone who arrives until there are no more customers, and then sleeping until the next customer arrives. In practice, there are a number of problems that can occur that are illustrative of general scheduling problems.</p>
</blockquote>
<p>I've <a href="https://github.com/OttoAllmendinger/term-paper-stm"> previously solved this problem</a> using <a href="http://en.wikipedia.org/wiki/Software_transactional_memory"> Software Transactional Memory</a> and was interested how the message-passing style of vert.x compares.</p>
<h1>Barber.coffee</h1>
<p>The barber shop problem nicely separates into two systems: a <code>barber</code> message handler that keeps track of incoming customers and manages the queue, and set of callback methods representing the customer, which initiate a communication sequence with the message handler. The following code defines the barber message handler.</p>
<pre>
vertx = require 'vertx'

addr = 'barber'

waitTime = -> Math.random() * 100

barber = ->
  # the state of the message handler lives
  # in this closure

  busy = false
  queue = []
  freeSeats = 20


  # make the system a little indeterministic

  log = (message) ->
    stdout.println "barber: #{message}"


  # the following methods define the core behavior

  checkQueue = ->
    if queue.length > 0
      serveCustomer queue.shift()
      freeSeats += 1
      return true
    else
      return false

  serveCustomer = ({customer, replier}) ->
    log "serving #{customer}"
    busy = true
    replier 'serve', (message, replier) ->
      vertx.setTimer waitTime(), ->
        log "done serving #{customer}"
        busy = checkQueue()
        replier 'done'


  # this is the handler's callback method that
  # is being returned by the barber function

  (message, replier) ->
    customer = message
    if busy
      # there is an intermediate state where we know that we
      # have to queue the customer because there aren't any
      # free seats, but the customer must first acknowledge
      # the waiting state before we can actually put him in 
      # the queue.
      if freeSeats > 0
        freeSeats -= 1
        log "sending #{customer} to queue"
        replier 'busy', (message, replier) ->
          # customer waiting ack
          queue.push {customer, replier}
          log "queued #{customer} - " +
              "length: #{queue.length} - free seats: #{freeSeats}"
      else
        replier 'full'
    else
      serveCustomer {customer, replier}


exports.start = ->
  vertx.eventBus.registerHandler addr, barber()

</pre>
<p>The state of the barber is encoded by the callback method that will be called for an upcoming event and the values of the variables defined in the closure. By being able to store repliers you can easily trigger remote state changes atomically, when they should occur.</p>
<h1>Customer.coffee</h1>
<p>Let's define the behavior of the customer in a separate file</p>
<pre>
vertx = require 'vertx'

addr = 'barber'

waitTime = -> Math.random() * 100

sendCustomer = (i) ->
  # As with the barber, the customer's state is
  # defined in this closure. The variables will
  # be modified by the callback methods that are
  # triggered by the message handler's replies.

  waiting = false
  beingServed = false

  log = (message) ->
    stdout.println "customer #{i}: #{message}"

  # just a shorthand

  send = (message, callback) ->
    vertx.eventBus.send addr, message, callback

  # factor out the exit method:
  # a customer can exit after having been served
  # or when the queue is full

  exit = (message) ->
    log message + " - exiting"
    # this method doesn't send a response
    # via the replier

  getHaircut = (message, replier) ->
    waiting = false
    beingServed = true
    log "being served"
    replier 'being-served', exit

  log "enters"

  send "customer #{i}", (message, replier) ->
    switch message
      when 'busy'
        waiting = true
        log 'waiting'
        replier 'waiting', getHaircut
      when 'serve'
        getHaircut message, replier
      when 'full'
        exit message


# a loop that continuously sends customers
# to the barber


sendCustomerLoop = (i) ->
  sendCustomer i

  vertx.setTimer waitTime(), -> sendCustomerLoop i + 1


exports.start = ->
  sendCustomerLoop 1
</pre>
<h1>barbershop.coffee</h1>
<p>This time, we want to run both handler and sender in the same process, for easier testing.
<pre>
barber = require 'barber'
customer = require 'customer'

barber.start()
customer.start()
</pre>
<h1>Running the shop</h1>
<p>When we start the <code>barbershop.coffee</code> script, we can see in the log that the shop is running as it is supposed to:</p>
<pre>
customer 1: enters
barber: serving customer 1
customer 1: being served
barber: done serving customer 1
customer 1: done - exiting
customer 2: enters
barber: serving customer 2
customer 2: being served
barber: done serving customer 2
customer 2: done - exiting
customer 3: enters
[...]
</pre>
<p>This is what the output looks like when there is no congestion at all. By chance, these customers came in just after the previous customer was served. If we wait a little longer, we can see a customer entering while the barber is busy:</p>
<pre>
barber: serving customer 3
customer 3: being served
customer 4: enters
barber: sending customer 4 to queue
customer 4: waiting
barber: queued customer 4 - length: 1 - free seats: 19
customer 5: enters
barber: sending customer 5 to queue
customer 5: waiting
barber: queued customer 5 - length: 2 - free seats: 18
barber: done serving customer 3
barber: serving customer 4
customer 3: done - exiting
customer 4: being served
</pre>
<p>As you can see, customer 4 was added to the queue and is being served right customer 3 is done. But what happens if the queue is full? Let's set <code>waitTime = -> Math.random() * 80</code> in <code>customer.coffee</code> so that there are a few more customers entering than leaving.</p>
<pre>
customer 34: enters
barber: sending customer 34 to queue
customer 34: waiting
barber: queued customer 34 - length: 20 - free seats: 0
customer 35: enters
customer 35: full - exiting
</pre>
<p>New customers are being turned away, as expected. The important thing is that there is no deadlocks and no invalid states, which can be easily checked by reading the log output. Knowing that there is just one callback method being executed at any point in time is a great help when reasoning about the program.</p>
<h1>Conclusion</h1>
<p>The central primitive is the construct <code>replier(send_message, next_state)</code>. The <code>replier</code> triggers a state transition in the remote system through <code>send_message</code> and defines the local <code>next_state</code>.</p>
<p>If you can model your system as something similar to linked state machines, this concurrency approach is easy to implement and very powerful.<br />
						
					</div>

	
				<hr />

                                                                <div class="author_box clearfix">
                                    <div style="display:table-cell">
                                        <a href="http://blog.synyx.de/?author=39" title="Alle Artikel von Otto Allmendinger">
                                            <img alt="" src="https://blog.synyx.de/wp-content/uploads/userphoto/" />
                                        </a>
                                    </div>
                                    <div class="author_description">
                                        <h2>About
                                            <a href="http://blog.synyx.de/?author=39" title="Alle Artikel von Otto Allmendinger">
                                                Otto Allmendinger                                            </a>
                                        </h2>
                                        <p></p>

                                        <ul class="author_contact">
                                                                                        <li >
                                                        <a href="mailto:allmendinger@synyx.de" title="allmendinger@synyx.de ">allmendinger@synyx.de</a>
                                                </li>
                                        
                                                                                </ul>
                                    </div>
                                </div>
                                <hr />




										

				




								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2013/04/asynchronous-concurrency-with-vert-x-part-2/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://blog.synyx.de/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><textarea id="comment" name="comment" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>
<p class="privacy-notice">
<input type="checkbox" id="akismet_privacy_check" name="akismet_privacy_check" value="1" aria-required="true" />
<label for="akismet_privacy_check"><strong>Achtung:</strong> Ich erkläre mich damit einverstanden, dass alle 
 eingegebenen Daten und meine IP-Adresse nur zum Zweck der Spamvermeidung durch das Programm 
 <a href="http://akismet.com/">Akismet</a> in den USA überprüft und gespeichert werden.<br />
 <a href="[LINK ZU DER DATENSCHUTZERKLÄRUNG EINSETZEN]">Weitere Informationen zu Akismet und Widerrufsmöglichkeiten</a>.</label></p>
						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='4191' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="3c473867ff" /></p>					</form>
							</div><!-- #respond -->
						            </div>
	</article>


  </div>
  <div class="span-one-third columns">
		
<div class="white box">
<div class="whiteContent">
<ul class="unstyled sidebar">


<li id="search-4" class="widget-container widget_search"><h3 class="widget-title">Suche</h3><div class="inline-inputs">
	<form action="http://blog.synyx.de/" method="get">
	    <fieldset>
        <p>
	        <input type="text" name="s" id="search" value="" />
	        <input class="btn secondary small" type="submit" alt="Search" value="Search" />
	    	</p>
	    </fieldset>
	</form>
</div> <!-- /inline-inputs --></li>
                                                
</ul>
</div>
</div>


<div class="lightgreen box">
<div class="lightgreenContent">

<ul class="unstyled sidebar">



        		<li id="recent-posts-2" class="widget-container widget_recent_entries">		<h3 class="widget-title">Recent Posts</h3>		<ul>
					<li>
				<a href="http://blog.synyx.de/2013/07/devoooops-azubitausch-bei-synyx/" title="DevOooops &#8211; Azubitausch bei synyx">DevOooops &#8211; Azubitausch bei synyx</a>
						</li>
					<li>
				<a href="http://blog.synyx.de/2013/07/usefulness-ranking-of-code-metrics/" title="Usefulness Ranking of Code Metrics">Usefulness Ranking of Code Metrics</a>
						</li>
					<li>
				<a href="http://blog.synyx.de/2013/06/awesome-css-3-layouting/" title="Awesome CSS 3 Layouting">Awesome CSS 3 Layouting</a>
						</li>
					<li>
				<a href="http://blog.synyx.de/2013/05/the-open-source-datacenter-conference-2013/" title="The Open Source Datacenter Conference 2013">The Open Source Datacenter Conference 2013</a>
						</li>
					<li>
				<a href="http://blog.synyx.de/2013/04/asynchronous-concurrency-with-vert-x-part-2/" title="Asynchronous concurrency with vert.x &#8211; Part 2">Asynchronous concurrency with vert.x &#8211; Part 2</a>
						</li>
				</ul>
		</li><li id="categories-2" class="widget-container widget_categories"><h3 class="widget-title">Kategorien</h3>		<ul>
	<li class="cat-item cat-item-3"><a href="http://blog.synyx.de/category/developerblog/" title="View all posts filed under Developer Blog">Developer Blog</a> (84)
<ul class='children'>
	<li class="cat-item cat-item-71"><a href="http://blog.synyx.de/category/developerblog/administratorblog/" title="View all posts filed under Administrator Blog">Administrator Blog</a> (10)
</li>
	<li class="cat-item cat-item-4"><a href="http://blog.synyx.de/category/developerblog/opensource/" title="View all posts filed under Open Source Blog">Open Source Blog</a> (27)
</li>
</ul>
</li>
	<li class="cat-item cat-item-166"><a href="http://blog.synyx.de/category/mobile-blog/" title="View all posts filed under Mobile Blog">Mobile Blog</a> (44)
<ul class='children'>
	<li class="cat-item cat-item-111"><a href="http://blog.synyx.de/category/mobile-blog/our-apps/" title="On the apps we program">Our Apps</a> (11)
</li>
	<li class="cat-item cat-item-112"><a href="http://blog.synyx.de/category/mobile-blog/tutorial/" title="Tutorials we published">Tutorial</a> (28)
</li>
</ul>
</li>
	<li class="cat-item cat-item-1"><a href="http://blog.synyx.de/category/synyxblog/" title="View all posts filed under synyx Blog">synyx Blog</a> (92)
<ul class='children'>
	<li class="cat-item cat-item-5"><a href="http://blog.synyx.de/category/synyxblog/azubi/" title="View all posts filed under Azubi Blog">Azubi Blog</a> (18)
</li>
</ul>
</li>
		</ul>
</li><li id="tag_cloud-3" class="widget-container widget_tag_cloud"><h3 class="widget-title">Tag Cloud</h3><div class="tagcloud"><a href='http://blog.synyx.de/tag/android/' class='tag-link-54' title='28 topics' style='font-size: 21.6818181818pt;'>android</a>
<a href='http://blog.synyx.de/tag/apache/' class='tag-link-25' title='5 topics' style='font-size: 10.8636363636pt;'>Apache</a>
<a href='http://blog.synyx.de/tag/apple/' class='tag-link-44' title='16 topics' style='font-size: 18.0227272727pt;'>apple</a>
<a href='http://blog.synyx.de/tag/ausbildung/' class='tag-link-23' title='8 topics' style='font-size: 13.5681818182pt;'>Ausbildung</a>
<a href='http://blog.synyx.de/tag/bdd/' class='tag-link-239' title='3 topics' style='font-size: 8pt;'>BDD</a>
<a href='http://blog.synyx.de/tag/bug/' class='tag-link-9' title='3 topics' style='font-size: 8pt;'>bug</a>
<a href='http://blog.synyx.de/tag/cloud/' class='tag-link-267' title='3 topics' style='font-size: 8pt;'>cloud</a>
<a href='http://blog.synyx.de/tag/conference/' class='tag-link-78' title='13 topics' style='font-size: 16.75pt;'>conference</a>
<a href='http://blog.synyx.de/tag/css/' class='tag-link-118' title='3 topics' style='font-size: 8pt;'>css</a>
<a href='http://blog.synyx.de/tag/database/' class='tag-link-96' title='5 topics' style='font-size: 10.8636363636pt;'>database</a>
<a href='http://blog.synyx.de/tag/development/' class='tag-link-47' title='4 topics' style='font-size: 9.59090909091pt;'>Development</a>
<a href='http://blog.synyx.de/tag/devoxx/' class='tag-link-77' title='6 topics' style='font-size: 11.9772727273pt;'>devoxx</a>
<a href='http://blog.synyx.de/tag/fachinformatiker/' class='tag-link-24' title='3 topics' style='font-size: 8pt;'>Fachinformatiker</a>
<a href='http://blog.synyx.de/tag/feier/' class='tag-link-93' title='4 topics' style='font-size: 9.59090909091pt;'>Feier</a>
<a href='http://blog.synyx.de/tag/fortbildung/' class='tag-link-212' title='3 topics' style='font-size: 8pt;'>fortbildung</a>
<a href='http://blog.synyx.de/tag/google-maps/' class='tag-link-125' title='5 topics' style='font-size: 10.8636363636pt;'>google maps</a>
<a href='http://blog.synyx.de/tag/internationalization/' class='tag-link-11' title='3 topics' style='font-size: 8pt;'>internationalization</a>
<a href='http://blog.synyx.de/tag/ipad/' class='tag-link-130' title='3 topics' style='font-size: 8pt;'>ipad</a>
<a href='http://blog.synyx.de/tag/iphone/' class='tag-link-45' title='22 topics' style='font-size: 20.0909090909pt;'>iphone</a>
<a href='http://blog.synyx.de/tag/ipod/' class='tag-link-131' title='3 topics' style='font-size: 8pt;'>ipod</a>
<a href='http://blog.synyx.de/tag/java/' class='tag-link-43' title='13 topics' style='font-size: 16.75pt;'>Java</a>
<a href='http://blog.synyx.de/tag/javascript/' class='tag-link-133' title='5 topics' style='font-size: 10.8636363636pt;'>javascript</a>
<a href='http://blog.synyx.de/tag/konferenz/' class='tag-link-60' title='5 topics' style='font-size: 10.8636363636pt;'>konferenz</a>
<a href='http://blog.synyx.de/tag/linux/' class='tag-link-72' title='5 topics' style='font-size: 10.8636363636pt;'>linux</a>
<a href='http://blog.synyx.de/tag/liquibase/' class='tag-link-234' title='3 topics' style='font-size: 8pt;'>liquibase</a>
<a href='http://blog.synyx.de/tag/maemo-5/' class='tag-link-135' title='4 topics' style='font-size: 9.59090909091pt;'>Maemo 5</a>
<a href='http://blog.synyx.de/tag/maven/' class='tag-link-48' title='9 topics' style='font-size: 14.3636363636pt;'>Maven</a>
<a href='http://blog.synyx.de/tag/mobile/' class='tag-link-20' title='12 topics' style='font-size: 16.1136363636pt;'>mobile</a>
<a href='http://blog.synyx.de/tag/objective-c/' class='tag-link-139' title='4 topics' style='font-size: 9.59090909091pt;'>objective-c</a>
<a href='http://blog.synyx.de/tag/opencms/' class='tag-link-68' title='14 topics' style='font-size: 17.2272727273pt;'>opencms</a>
<a href='http://blog.synyx.de/tag/open-source/' class='tag-link-61' title='10 topics' style='font-size: 15pt;'>open source</a>
<a href='http://blog.synyx.de/tag/processes/' class='tag-link-32' title='3 topics' style='font-size: 8pt;'>Processes</a>
<a href='http://blog.synyx.de/tag/productivity/' class='tag-link-35' title='3 topics' style='font-size: 8pt;'>productivity</a>
<a href='http://blog.synyx.de/tag/project-management/' class='tag-link-34' title='3 topics' style='font-size: 8pt;'>project management</a>
<a href='http://blog.synyx.de/tag/qt-4-6/' class='tag-link-145' title='3 topics' style='font-size: 8pt;'>Qt 4.6</a>
<a href='http://blog.synyx.de/tag/scrum/' class='tag-link-28' title='4 topics' style='font-size: 9.59090909091pt;'>Scrum</a>
<a href='http://blog.synyx.de/tag/selenium/' class='tag-link-280' title='4 topics' style='font-size: 9.59090909091pt;'>Selenium</a>
<a href='http://blog.synyx.de/tag/software-development/' class='tag-link-31' title='6 topics' style='font-size: 11.9772727273pt;'>Software Development</a>
<a href='http://blog.synyx.de/tag/solr/' class='tag-link-86' title='5 topics' style='font-size: 10.8636363636pt;'>Solr</a>
<a href='http://blog.synyx.de/tag/spring/' class='tag-link-15' title='7 topics' style='font-size: 12.7727272727pt;'>spring</a>
<a href='http://blog.synyx.de/tag/synyx/' class='tag-link-19' title='29 topics' style='font-size: 22pt;'>synyx</a>
<a href='http://blog.synyx.de/tag/test/' class='tag-link-87' title='6 topics' style='font-size: 11.9772727273pt;'>Test</a>
<a href='http://blog.synyx.de/tag/testing/' class='tag-link-155' title='3 topics' style='font-size: 8pt;'>testing</a>
<a href='http://blog.synyx.de/tag/tomcat/' class='tag-link-49' title='5 topics' style='font-size: 10.8636363636pt;'>Tomcat</a>
<a href='http://blog.synyx.de/tag/webdriver/' class='tag-link-184' title='3 topics' style='font-size: 8pt;'>WebDriver</a></div>
</li><li id="linkcat-2" class="widget-container widget_links"><h3 class="widget-title">Blogroll</h3>
	<ul class='xoxo blogroll'>
<li><a href="http://dlinsin.github.com/" title="Blog von David Linsin" target="_blank">David Linsin – Blog</a></li>
<li><a href="http://fhopf.blogspot.com/" title="Blog von Florian Hopf" target="_blank">Florian Hopf &#8211; Blog</a></li>
<li><a href="https://github.com/olivergierke" title="Blog von Oliver Gierke" target="_blank">Oliver Gierke´s Blog</a></li>
<li><a href="http://opencms-forum.de/opencms-forum/index">OpenCms Forum</a></li>

	</ul>
</li>

</ul>
</div>
</div>


<script type="text/javascript">
    $(function () {
       $(".bootstraptwipsy").twipsy({
        live: true
      })
    });
</script>

<div class="yellow contact box">

    <div class="yellowContent">
      <h3>synyx Gmbh &amp; Co. KG</h3>

      <p class="bold">
          Open Source Solutions
      </p>

      <p>
          Karlstraße 68 <br>
          76137 Karlsruhe
      </p>

      <p>
          <span class="tel">+49 721 66 24 866</span>
          <span class="fax">+49 721 66 48 877</span>
          <span class="email"><a href="mailto:info@synyx.de">info@synyx.de</a></span>
      </p>

      <p>
          <a class="socialMediaIcon" href="irc://irc.synyx.de"><img alt="irc chat" src="http://blog.synyx.de/wp-content/themes/synyx_theme/graphics/ircicon.png" class="bootstraptwipsy" data-original-title="irc.synyx.de #synyx"></a>
          <a class="socialMediaIcon" href="http://twitter.com/synyx_ka"><img alt="twitter" src="http://blog.synyx.de/wp-content/themes/synyx_theme/graphics/twittericon.png" title="@synyx_ka" class="bootstraptwipsy"></a>
          <a class="socialMediaIcon" href="https://plus.google.com/117544985754741544727"><img alt="Google+" src="http://blog.synyx.de/wp-content/themes/synyx_theme/graphics/googleplus.png" class="bootstraptwipsy" data-original-title="synyx"></a>
          <a class="socialMediaIcon" href="http://www.facebook.com/synyx.opensource"><img alt="facebook" src="http://blog.synyx.de/wp-content/themes/synyx_theme/graphics/fbicon.png" title="synyx.opensource" class="bootstraptwipsy"></a>
      </p>

    </div>
</div>  </div>
</div>
</div>


<div class="row"><div class="span15" id="openSourceBanner">

  <img src="http://blog.synyx.de/wp-content/themes/synyx_theme/graphics/arrowhead.png">
  <div id="openSourceArrow">
    <span class="openSource">
      <a href="http://www.synyx.de/unternehmen/vision_mission/">Wir leben Open Source!</a>
    </span>
  </div>

</div></div>



<footer>

<div class="row">

<div class="span15" id="footer">

  <!-- footer sitemap -->

 <div class="span3 ulBorderRight whiteLi">
    <h4><a href="/unternehmen/">UNTERNEHMEN</a></h4>
        <ul>
            <li><a href="http://www.synyx.de/unternehmen/vision_mission/">Vision - Mission</a></li>
            <li><a href="http://www.synyx.de/unternehmen/team/">Unser Team</a></li>
            <li><a href="http://www.synyx.de/unternehmen/partner/">Partner</a></li>
            <li><a href="http://www.synyx.de/unternehmen/referenzen/">Referenzen</a></li>
            <li><a href="http://www.synyx.de/unternehmen/publikationen/">Publikationen</a></li>
            <li><a href="http://www.synyx.de/unternehmen/presse/">Presse</a></li>
            <li><a href="http://www.synyx.de/unternehmen/jobs/">Jobs</a></li>
        </ul>
    </div>

<div class="span3 ulBorderRight whiteLi">
    <h4><a href="/leistungen/">LEISTUNGEN</a></h4>
        <ul>
            <li><a href="http://www.synyx.de/leistungen/code_clinic/">Code Clinic</a></li>
            <li><a href="http://www.synyx.de/leistungen/individualsoftware/">Individualsoftware</a></li>
            <li><a href="http://www.synyx.de/leistungen/content_management/">Content Management</a></li>
            <li><a href="http://www.synyx.de/leistungen/mobile_solutions/">Mobile Solutions</a></li>
            <li><a href="http://www.synyx.de/leistungen/operations/">Operations</a></li>
        </ul>
    </div>

  <div class="span3 ulBorderRight whiteLi">
    <h4><a href="http://www.synyx.de/entwicklung/">ENTWICKLUNG</a></h4>
        <ul>
            <li><a href="http://www.synyx.de/entwicklung/qualitaetsmanagement/">Qualit&auml;tsmanagement</a></li>
            <li><a href="http://www.synyx.de/entwicklung/scrum/">Scrum</a></li>
            <li><a href="http://www.synyx.de/entwicklung/opensource/">Open Source</a></li>
            <li><a href="http://www.synyx.de/entwicklung/weiterbildung/">Weiterbildung</a></li>
        </ul>
    </div>

    <div class="span3 ulBorderRight whiteLi">
    <h4><a href="/opensource/">OPEN SOURCE</a></h4>
        <ul>
            <li><a href="http://www.synyx.de/opensource/hades/">Hades</a></li>
            <li><a href="http://www.synyx.de/opensource/messagesource/">MessageSource</a></li>
            <li><a href="http://www.synyx.de/opensource/hera/">Hera</a></li>
            <li><a href="http://www.synyx.de/opensource/minos2/">Minos 2.0</a></li>
            <li><a href="http://www.synyx.de/opensource/opencms/netbeans_opencms_upload/">Netbeans OpenCms upload</a></li>
            <li><a href="http://www.synyx.de/opensource/opencms/opencms_Grusskartenmodul/">OpenCms Gru&szlig;kartenmodul</a></li>
            <li><a href="http://www.synyx.de/opensource/opencms/maven-plugin_fuer_opencms/">Maven-Plugin f&uuml;r OpenCms</a></li>
            <li><a href="http://www.synyx.de/opensource/opencms/solr_opencms_modul/">Solr OpenCms Modul</a></li>
        </ul>
    </div>


    <div class="span3 greenLiFooter">
        <ul>
            <li><a href="http://www.synyx.de/kontakt/">Kontakt</a></li>
            <li><a href="http://www.synyx.de/impressum/">Impressum</a></li>
            <li><a href="http://www.synyx.de/downloads/AGB_synyx_12_11.pdf">AGBs</a></li>
        </ul>
        <ul>
            <li><a href="http://blog.synyx.de">Blog</a></li>
            <li><a href="https://twitter.com/synyx_ka">Twitter</a></li>
            <li><a href="http://www.facebook.com/synyx.opensource">Facebook</a></li>
            <li><a href="https://plus.google.com/117544985754741544727">Google+</a></li>
        </ul>

    </div>

</div>





</div>




                
                
                
                <!-- Piwik plugin active -->				<!-- Piwik code inserted by Piwik Analytics Wordpress plugin by Jules Stuifbergen http://forwardslash.nl/piwik-analytics/ -->
				<script type="text/javascript">
									var pkBaseURL = document.location.protocol + "//" + "synyx.de" + "/stats/";
								document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
				</script><script type="text/javascript">
				try {
				var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 3);
				piwikTracker.setDocumentTitle(document.title);
				piwikTracker.trackPageView();
							piwikTracker.enableLinkTracking();
							} catch( err ) {}
				</script>
				<!-- /Piwik -->
	<script type='text/javascript'>
  SyntaxHighlighter.autoloader(
      'applescript            https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushAppleScript.js',
      'actionscript3 as3      https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushAS3.js',
      'bash shell             https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushBash.js',
      'coldfusion cf          https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushColdFusion.js',
      'cpp c                  https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushCpp.js',
      'c# c-sharp csharp      https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushCSharp.js',
      'css                    https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushCss.js',
      'delphi pascal          https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushDelphi.js',
      'diff patch pas         https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushDiff.js',
      'erl erlang             https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushErlang.js',
      'groovy                 https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushGroovy.js',
      'hive                   https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushHive.js',
      'java                   https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushJava.js',
      'jfx javafx             https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushJavaFX.js',
      'js jscript javascript  https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushJScript.js',
      'objc obj-c             https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushObjectiveC.js',
      'perl pl                https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushPerl.js',
      'php                    https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushPhp.js',
      'pig                    https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushPig.js',
      'text plain             https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushPlain.js',
      'py python              https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushPython.js',
      'ruby rails ror rb      https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushRuby.js',
      'sass scss              https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushSass.js',
      'scala                  https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushScala.js',
      'sql                    https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushSql.js',
      'vb vbnet               https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushVb.js',
      'xml xhtml xslt html    https://blog.synyx.de/wp-content/plugins/syntax-highlighter-mt/scripts/shBrushXml.js'
       );
	SyntaxHighlighter.all();
</script>
                </footer>
  </div> <!-- /container -->

</body>
</html>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk: enhanced
Database Caching using memcached
Object Caching 863/1038 objects using memcached

 Served from: blog.synyx.de @ 2013-08-12 15:43:23 by W3 Total Cache -->