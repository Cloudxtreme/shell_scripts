<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
                 <link rel="shortcut icon" href="/tnf/resource/favicon.ico" type="image/x-icon"> 
		<title>
			NetBSD Blog
		</title>
                <link rel="stylesheet" type="text/css" href='/tnf/resource/global.css' />
		<link rel="stylesheet" type="text/css" href='/tnf/page/custom.css' />
	</head>
	<body>
		
			        
            <link rel="alternate" type="application/atom+xml" title="Recent Entries (Atom)"  href="http://blog.netbsd.org/tnf/feed/entries/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Entries (RSS)"   href="http://blog.netbsd.org/tnf/feed/entries/rss" />
    <link rel="alternate" type="application/atom+xml" title="Recent Comments (Atom)" href="http://blog.netbsd.org/tnf/feed/comments/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Comments (RSS)"  href="http://blog.netbsd.org/tnf/feed/comments/rss" />

          <link rel="alternate" type="application/atom+xml" title="Entries for category Development (Atom)"  href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FDevelopment" />
      <link rel="alternate" type="application/rss+xml"  title="Entries for category Development (RSS)"   href="http://blog.netbsd.org/tnf/feed/entries/rss?cat=%2FDevelopment" />
    
                <link rel="search"
            title="OpenSearch Descriptor for weblog NetBSD Blog"
            type="application/opensearchdescription+xml"
            href="http://blog.netbsd.org/roller-services/opensearch/tnf" />
    		
		<div id="header">
			<div class="topNavigation">
				<span>&raquo;</span> <a href="http://www.NetBSD.org/docs/guide/en/">The Guide</a> | <a href="http://man.NetBSD.org">Manual pages</a> | <a href="http://www.NetBSD.org/mailinglists/">Mailing lists</a> and <a href="http://mail-index.NetBSD.org/">Archives</a> | <a href="http://cvsweb.NetBSD.org/">CVS repository</a> | <a href="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">Report</a> or <a href="http://gnats.NetBSD.org/">query</a> a bug | <a href="http://www.NetBSD.org/docs/software/packages.html">Software Packages</a>
			</div>
			<div class="centralHeader">
				<a href="/"><img src="/tnf/resource/NetBSD-headerlogo.png" alt="[NetBSD Logo]" width="506" height="90" /></a>
				<div class="headerTools">
<BR>
					<div id="headerSearch">
						<form method="get" action="/tnf/search">
							<input class="whiteOnBlack" type="text" name="q" onfocus="if(this.value==this.defaultValue ) this.value='';" size="12" maxlength="255" value="Search" /> <input type="submit" value="Search" />
						</form>
					</div>
				</div>
			</div>
			<div class="navBar">
				<a href="http://blog.netbsd.org/tnf/" title="Home">Home</a>&nbsp;|&nbsp;
                                <img src="/tnf/resource/feed-icon-14x14.png" border=0 align="absmiddle"><a href="http://blog.netbsd.org/tnf/feed/entries/atom">RSS</a>&nbsp;|&nbsp;
 <a href="http://blog.netbsd.org/tnf/category/General" title="General">General</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Release+engineering" title="Blog about NetBSD release engineering.">Release engineering</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Networking" title="">Networking</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Development" title="About NetBSD development.">Development</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Events" title="Upcoming and past events.">Events</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/The+NetBSD+Foundation" title="TNF articles.">The NetBSD Foundation</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Packages" title="The most portable package software in the world.">Packages</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Security" title="Security advisories and security related information.">Security</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Ports" title="Port specific news">Ports</a>&nbsp;|&nbsp; 
      <a href="/roller-ui/login-redirect.rol"><span>Login</span></a>
  			</div>
		</div>
		<div id="content">
			<div class="rowOfBoxes">
				<div class="quarter noBorderOnLeft borderOnRight sideBarLeft">

                                                <h3>Bookmarks</h3>
                                                                                                <ul class="rFolder">
                    <li class="rFolderItem">
                                <a href="http://www.NetBSD.org/"
               title="NetBSD is a free, secure, and highly portable Unix-like Open Source operating system available for many platforms, from large-scale server systems to powerful desktop systems to handheld and embedded devices."
               class="rBookmark0">The NetBSD Project</a>
                </li>
            <li class="rFolderItem">
                                <a href="http://wiki.netbsd.org/"
               title="The NetBSD Wiki is a collaborative writing project to build useful resources for NetBSD users."
               class="rBookmark0">NetBSD Wiki</a>
                </li>
                    </ul>
	
						<h3>Feeds</h3>
						    <ul class="rFeeds">
    <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom">All</a></li>
                <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FGeneral">/General</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FRelease+engineering">/Release engineering</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FNetworking">/Networking</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FDevelopment">/Development</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FEvents">/Events</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FThe+NetBSD+Foundation">/The NetBSD Foundation</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPackages">/Packages</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FSecurity">/Security</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPorts">/Ports</a></li>
        <li><a href="http://blog.netbsd.org/tnf/feed/comments/atom">Comments</a></li>
    </ul>

			</div>
			</div>
			<div class="mainContent">
				<div class="half noBorderOnLeft" style="border-left: 1px dotted #000">
							  		              <h2><a href="http://blog.netbsd.org/tnf/entry/firefox_on_sparc64">Firefox on sparc64</a></h2><BR>
<div class="descr">May 26, 2013 posted by <i>Martin Husemann</I></div><BR>

  New firefox will be available for NetBSD/sparc64 again starting with the import of the official version 22 release into pkgsrc.[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/firefox_on_sparc64">Read More</a>]

   [<a href="http://blog.netbsd.org/tnf/entry/firefox_on_sparc64#comments">4 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/initial_kyua_import_done">Initial Kyua import done</a></h2><BR>
<div class="descr">March 01, 2013 posted by <i>Julio Merino</I></div><BR>

  <p>I am very happy to announce that the initial import of <a href="http://wiki.NetBSD.org/kyua/">Kyua</a> into the NetBSD <a href="http://wiki.NetBSD.org/kyua/import/">source tree</a> is complete!  I am sure there are some rough edges and here is where you come into play.</p>

<p>First of all, let me clarify that all the integration changes are gated
by the <tt>MKKYUA</tt> build setting, which still defaults to no.  Unless you
explicitly set <tt>MKKYUA=yes</tt> in <tt>/etc/mk.conf</tt> or in the <tt>build.sh</tt> command
line, you will <i>not</i> get a system with Kyua.  However, once you set that
flag, you will transition to the full new setup:</p>

<ul>
<li>Kyua will be installed as <tt>/usr/bin/kyua</tt>.  See <tt>kyua(1)</tt> to get started.</li>

<li>The old atf-run and atf-report tools will become compatibility
wrappers.  These should be a reasonable drop-in replacement for most
use cases, but they are probably not perfect.</li>

<li>Your <tt>/usr/tests</tt> tree will be populated by a bunch of <tt>Kyuafile</tt>s.</li>
</ul>

<p>So what's new compared to the ATF tools?  Here are some highlights:</p>

<ul>
<li>Ability to write and run ATF-less tests.  It has been a common desire
  around here to develop test programs that do not rely on the ATF
  libraries.  With this change, this becomes possible.  See <tt>kyuafile(5)</tt>
  for details.</li>

<li>Direct HTML report generation.  There is no need to set up a complex
  XML toolchain any more to convert the ATF test reports into HTML
  pages.  Kyua can generate plain HTML directly, so it will be feasible
  to serve such content straight from NetBSD's built-in <tt>httpd</tt>.</li>

<li>Historical data.  As seen in the various test beds that have appeared
  around ATF, there is a desire to maintain historical data of the test
  results.  Kyua does that natively, by recording the results of the
  execution in a SQLite database.  Reports can later be extracted from
  this database.  There is still a lot of room for improvement here.</li>

<li>More flexible metadata and configuration.  While this does not provide
  a real advantage today, as soon as the old <tt>atf-run</tt> and <tt>atf-report</tt>
  tools are gone we can trivially fix some long-standing issues
  (e.g. the inability to customize test deadlines).</li>

<li>Less complexity during test case execution.  As you may have noticed
  over the years, the code in atf-run to capture the output of tests and
  deal with interrupts is not particularly robust.  There have been
  several problems in this area, and I'm not convinced that they are all
  fixed.  The new code works in a different manner and has been more
  carefully thought around these edges.</li>

<li>Independent testers.  The code that implements the isolation of test
  cases and their controlled execution has been split into a set of
  "testers" that live in <tt>/usr/libexec/kyua-*-tester</tt>.  These tools
  provide scriptable interfaces to interact with tests, with the idea
  that the <tt>kyua(1)</tt> frontend should end up being pretty straightforward.
  Should you want to write your own trivial script to run tests without
  <tt>kyua(1)</tt>, you could pretty easily do that by interacting with the
  testers directly.</li>
</ul>

<p>How can you help?  Easy.  Just rebuild your system with <tt>MKKYUA=yes</tt>, read
through <tt>kyua(1)</tt>, start using it to stress-test your system and <a href="https://code.google.com/p/kyua/issues/list">report
any problems</a> you may encounter!</p>

<p>My immediate next steps include addressing your feedback and working
with our major test runners to add support to their systems to use the
new tools (for example, change <tt>anita</tt> to support running tests with
<tt>kyua(1)</tt>).</p>

Enjoy and thanks for reading.

 [<a href="http://blog.netbsd.org/tnf/entry/initial_kyua_import_done#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/wanna_raspberry">Wanna Raspberry?</a></h2><BR>
<div class="descr">July 30, 2012 posted by <i>Mike M. Volokhov</I></div><BR>

  Demand for a cheap yet powerful computer is pretty high in geek circles. Remember those days when you could take a ZX Spectrum, or Commodore 64, or something like that and attach it to your TV to fill next few days with a great fun. Since then, PCs pushed out these tiny home computers. But today, Raspberry Pi&nbsp;&mdash; a little credit-card sized sweet computer&nbsp;&mdash; is here.

<img src="/tnf/resource/mishka/nicks-rpi.jpg" style="float:left;" alt="Nick's Raspberry Pi">

<p>
The <a href="http://www.raspberrypi.org/">Raspberry Pi</a> is built on Broadcom BCM2835 system on chip which contains ARM1176 core running at 700MHz, with VideoCore 4 GPU, and has 256 MB of RAM on board. It provides two USB ports, 100Mb/s Ethernet, HDMI and composite video; audio output presented as well. Operating system loaded from SD flash.

<p>
Yet more fun is that the initial NetBSD support was just <a href="http://mail-index.NetBSD.org/source-changes/2012/07/26/msg035951.html">committed</a> to the NetBSD source tree, and the Raspberry Pi can boot into multiuser now. Currently work on device drivers is in progress. USB and Ethernet are planned to be supported next.

<p>
<q>Generally, NetBSD support for the ARM1176 core is in very good shape. The largest parts of the code I committed were the update to the plcom serial driver and  the infrastructure to support the low level parts of the bcm2835 (interrupt controller, bus_space, and timer)</q> &mdash; says Nick Hudson, who did the bringup. However, the porting has some hard nuts to crack: <q>The graphics part is a bit of a challenge. But I hope to get dumb framebuffer support relatively soon. There is a publicly available datasheet for part of bcm2835, but certainly not the video controller.</q>

<p>
<q>Matt Thomas, the <a href="http://www.NetBSD.org/ports/evbarm/">port-evbarm</a> portmaster, was very knowledgeable and helpful in answering all my questions. I'd like to also thank Stephen Borrill for getting me an RPI in the first place. Stephen spoke to Eben Upton in Cambridge and soon after an RPI arrived</q>&nbsp;&mdash; adds Nick.

<p>
So, there is a <a href="http://mail-index.NetBSD.org/port-arm/2012/07/13/msg001367.html">boot log</a> from the very first NetBSD driven RPI board, and work on the device is in full swing. Many people exposed interest, and eventually the Raspberry Pi could became a good alternative for number of well supported, but aging single board computers.
<p>

   [<a href="http://blog.netbsd.org/tnf/entry/wanna_raspberry#comments">23 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/prettifying_the_netbsd_console">Prettifying the NetBSD console</a></h2><BR>
<div class="descr">April 01, 2012 posted by <i>Michael Lorenz</I></div><BR>

  <p>Over the last few months, many of NetBSD's graphical console drivers have gained the ability to use anti-aliased fonts.  This was done mostly as a way to allow relatively easy access to a vast number of fonts, but they also look a lot better than plain monochrome fonts. With the <tt>genfb(4)</tt> driver this feature is available on almost all supported hardware which supports graphics.  Some specialized drivers also support it (such as <tt>radeonfb(4)</tt>, <tt>r128fb(4)</tt>, <tt>voodoofb(4)</tt>, <tt>ffb(4)</tt> and <tt>voyagerfb(4)</tt> ) and more are being added over time.</p>

<p>In order to improve overall usability and to give NetBSD a more unified look across different platforms, we are going to use a single default font and colour scheme on all platforms. Since <a href="http://www.dyslexic.com/fonts">studies prove its superiour readability</a> we are proud to announce that <a href="http://www.microsoft.com">Microsoft</a> has granted permission to use the Comic Sans font in all future NetBSD releases.</p>
<p> Screenshots:  
<ul><li>
<a href="http://blog.netbsd.org/tnf/resource/comic/IMG_0260_sc.jpg">a newly booted system using the new console</a></li>
<li><a href="http://blog.netbsd.org/tnf/resource/comic/IMG_0261_sc.jpg">showing output from the top utility.</a></li>
</ul>
</p>


   [<a href="http://blog.netbsd.org/tnf/entry/prettifying_the_netbsd_console#comments">9 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/posix_spawn_syscall_added">posix_spawn syscall added</a></h2><BR>
<div class="descr">February 26, 2012 posted by <i>Martin Husemann</I></div><BR>

  The posix_spawn kernel implementation, mostly developed by Charles Zhang during Google Summer of Code 2011, has now been committed.
<p>
[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/posix_spawn_syscall_added">Read More</a>]

 [<a href="http://blog.netbsd.org/tnf/entry/posix_spawn_syscall_added#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/new_tutorial_creating_atf_based">Creating atf-based tests for NetBSD src (new tutorial)</a></h2><BR>
<div class="descr">September 05, 2010 posted by <i>Julio Merino</I></div><BR>

  <p>Dear readers,</p>

<p>With this post, I would like to announce the availability of the <a href="http://wiki.netbsd.org/tutorials/atf/">atf tutorial</a> published on the wiki!</p>

<p>This new document intends to aid NetBSD developers in writing <a href="http://www.NetBSD.org/~jmmv/atf/">atf</a>-based tests for the NetBSD source tree. It does so by providing a description of the basic concepts behind the atf design and listing what the necessary steps are to write an atf-based test for the NetBSD source tree. The tutorial also includes several code snippets ready to be copy/pasted into your own code, some reference sections for common functions and a short FAQ section for common concerns raised by users of the framework.</p>

<p>The tutorial comes to fill an important gap in achieving wide acceptance of atf among NetBSD developers. Some of us have been trying to migrate old regress tests to the new atf framework for a while, but such efforts are futile if other developers keep submitting new tests to the obsolete regress tree.  However, such developers have been doing so because the atf documentation is not yet up to the task to guide a new developer into writing a test program for NetBSD.  I expect this new tutorial to cover this gap and I hope you enjoy reading it as much as I enjoyed writing it.  Comments will be highly appreciated!</p>

<p>Lastly, I want to give special thanks to Antti Kantee for the multiple rounds of reviews and suggestions on the text.</p>

<p><b>References</b></p>

<ul>
<li><a href="http://wiki.netbsd.org/tutorials/atf/">The tutorial: Creating atf-based tests for NetBSD src</a></li>
<li><a href="http://www.NetBSD.org/~jmmv/atf/">Automated Testing Framework website</a></li>
</ul>

 [<a href="http://blog.netbsd.org/tnf/entry/new_tutorial_creating_atf_based#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/google_summer_of_code_postscript">Google Summer of Code: PostScript output for mandoc</a></h2><BR>
<div class="descr">August 11, 2010 posted by <i>Thomas Klausner</I></div><BR>

  <p>Kristaps Dzonsons successfully implemented PostScript and PDF output for mandoc for his Google Summer of Code project.</p>[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/google_summer_of_code_postscript">Read More</a>]

   [<a href="http://blog.netbsd.org/tnf/entry/google_summer_of_code_postscript#comments">1 comment</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/portable_c_compiler">Portable C Compiler</a></h2><BR>
<div class="descr">June 07, 2010 posted by <i>Iain Hibbert</I></div><BR>

  <p>After reading about progress with the Portable C Compiler (PCC) last year, I was inspired to try building it on NetBSD. Gregory McGarry had done some work integrating it into the toolchain though it is not yet useable to build a full release, but the native build framework in external/bsd/pcc was incomplete.</p>[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/portable_c_compiler">Read More</a>]

   [<a href="http://blog.netbsd.org/tnf/entry/portable_c_compiler#comments">3 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host">Kernel Modules Autoload from Host in Rump</a></h2><BR>
<div class="descr">April 27, 2010 posted by <i>Antti Kantee</I></div><BR>

  <p>
Since early 2009 NetBSD and <a href="http://www.NetBSD.org/docs/rump/">rump</a> has supported execution of stock kernel
module binaries in userspace on x86 architectures.  Starting in -current as of today, kernel modules will automatically
be loaded from the host into the rump kernel.  For example, when mounting a file system in a rump
kernel, support will be automatically loaded before mounting is attempted.
</p>[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host">Read More</a>]

   [<a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host#comments">3 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/netbsd_runtime_linker_gains_negative">NetBSD runtime linker gains negative symbol cache</a></h2><BR>
<div class="descr">February 27, 2010 posted by <i>Roy Marples</I></div><BR>

  <p>The NetBSD runtime linker now has a negative symbol cache. In a nutshell, this has reduced the startup time of <a href="http://projects.gnome.org/evolution/">the Evolution mail client</a> from around 5 minutes to 3 seconds on my QuadCore amd64 machine. Not many applications have a lot of plugins with a large amount of links to external libraries and I doubt many other applications will gain such a drastic speed bump, but the <a href="http://www.gnome.org/">GNOME desktop</a> as a whole now loads small bit quicker. I would imagine that <a href="http://www.kde.org/">KDE</a> will now load faster as well.</p>

   [<a href="http://blog.netbsd.org/tnf/entry/netbsd_runtime_linker_gains_negative#comments">8 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/terminfo_has_replaced_termcap">terminfo has replaced termcap</a></h2><BR>
<div class="descr">February 04, 2010 posted by <i>Roy Marples</I></div><BR>

  <p>NetBSD-6 will now sport the <a href="http://www.opengroup.org/onlinepubs/007908799/xcurses/term.h.html">terminfo</a> interface which removes a lot of the problems with the old <a href="http://www.opengroup.org/onlinepubs/007908799/xcurses/tgetent.html">termcap</a> which is deprecated by The Open Group. Upgrading existing systems should be quite painless as the old termcap interface is still provided, but there are some caveats.
<ul>
<li>$TERMCAP is no longer supported, tset -s no longer exports it.
So if you maintain your own terminal definition, you'll need to use tic(1) on a small terminfo database in $HOME.
<li>NetBSD extensions to termcap are no longer supported.
Only 3rd party applications that used these would be affected.
</ul>
</p>

<p>This should allow pkgsrc not to need <a href="http://www.gnu.org/software/ncurses/">ncurses</a> for a fair few console applications, like say <a href="http://tmux.sourceforge.net/">tmux</a>.</p>

 [<a href="http://blog.netbsd.org/tnf/entry/terminfo_has_replaced_termcap#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/netbsd_lvm_enabled_by_default">NetBSD LVM enabled by default</a></h2><BR>
<div class="descr">December 04, 2009 posted by <i>Adam Hamsik</I></div><BR>

  <p>Next release of NetBSD has received major push on storage front today, because Logical Volume Manager was enabled in current NetBSD. LVM support was committed in -current for a long time now but it was disabled by default. Today I have set MKLVM variable to yes by default which means that LVM will by included in all builds from now. </p>[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/netbsd_lvm_enabled_by_default">Read More</a>]

   [<a href="http://blog.netbsd.org/tnf/entry/netbsd_lvm_enabled_by_default#comments">3 comments</a>]
 
</p>


<p>&nbsp;</p>

    		  <div class="next-prev">
		  		                                 <a href="/tnf/category/Development">Main</a>
                | <a href="/tnf/category/Development?page=1">Next page</a> &raquo;
    		  		  </div>
		  				</div>
			</div>
			<div class="clearer"></div>
		</div>
		<div class="rowOfBoxes">
			<div id="footer">
				<span class="footfeed"><a href="http://www.NetBSD.org/cgi-bin/feedback.cgi">Contact</a> |</span> <span class="footcopy"><a href="http://www.NetBSD.org/about/disclaimer.html">Disclaimer</a> | <span class="copyright">Copyright © 1994-2009 The NetBSD Foundation, Inc.</span> ALL RIGHTS RESERVED.<br />
				NetBSD<sup>®</sup> is a registered trademark of The NetBSD Foundation, Inc.</span>
			</div>
		</div>
	</body>
</html>

