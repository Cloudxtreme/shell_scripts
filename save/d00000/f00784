<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
                 <link rel="shortcut icon" href="/tnf/resource/favicon.ico" type="image/x-icon"> 
		<title>
			NetBSD Blog
		</title>
                <link rel="stylesheet" type="text/css" href='/tnf/resource/global.css' />
		<link rel="stylesheet" type="text/css" href='/tnf/page/custom.css' />
	</head>
	<body>
		
			        
            <link rel="alternate" type="application/atom+xml" title="Recent Entries (Atom)"  href="http://blog.netbsd.org/tnf/feed/entries/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Entries (RSS)"   href="http://blog.netbsd.org/tnf/feed/entries/rss" />
    <link rel="alternate" type="application/atom+xml" title="Recent Comments (Atom)" href="http://blog.netbsd.org/tnf/feed/comments/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Comments (RSS)"  href="http://blog.netbsd.org/tnf/feed/comments/rss" />

    
                <link rel="search"
            title="OpenSearch Descriptor for weblog NetBSD Blog"
            type="application/opensearchdescription+xml"
            href="http://blog.netbsd.org/roller-services/opensearch/tnf" />
    		
		<div id="header">
			<div class="topNavigation">
				<span>&raquo;</span> <a href="http://www.NetBSD.org/docs/guide/en/">The Guide</a> | <a href="http://man.NetBSD.org">Manual pages</a> | <a href="http://www.NetBSD.org/mailinglists/">Mailing lists</a> and <a href="http://mail-index.NetBSD.org/">Archives</a> | <a href="http://cvsweb.NetBSD.org/">CVS repository</a> | <a href="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">Report</a> or <a href="http://gnats.NetBSD.org/">query</a> a bug | <a href="http://www.NetBSD.org/docs/software/packages.html">Software Packages</a>
			</div>
			<div class="centralHeader">
				<a href="/"><img src="/tnf/resource/NetBSD-headerlogo.png" alt="[NetBSD Logo]" width="506" height="90" /></a>
				<div class="headerTools">
<BR>
					<div id="headerSearch">
						<form method="get" action="/tnf/search">
							<input class="whiteOnBlack" type="text" name="q" onfocus="if(this.value==this.defaultValue ) this.value='';" size="12" maxlength="255" value="Search" /> <input type="submit" value="Search" />
						</form>
					</div>
				</div>
			</div>
			<div class="navBar">
				<a href="http://blog.netbsd.org/tnf/" title="Home">Home</a>&nbsp;|&nbsp;
                                <img src="/tnf/resource/feed-icon-14x14.png" border=0 align="absmiddle"><a href="http://blog.netbsd.org/tnf/feed/entries/atom">RSS</a>&nbsp;|&nbsp;
 <a href="http://blog.netbsd.org/tnf/category/General" title="General">General</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Release+engineering" title="Blog about NetBSD release engineering.">Release engineering</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Networking" title="">Networking</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Development" title="About NetBSD development.">Development</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Events" title="Upcoming and past events.">Events</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/The+NetBSD+Foundation" title="TNF articles.">The NetBSD Foundation</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Packages" title="The most portable package software in the world.">Packages</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Security" title="Security advisories and security related information.">Security</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Ports" title="Port specific news">Ports</a>&nbsp;|&nbsp; 
      <a href="/roller-ui/login-redirect.rol"><span>Login</span></a>
  			</div>
		</div>
		<div id="content">
			<div class="rowOfBoxes">
				<div class="quarter noBorderOnLeft borderOnRight sideBarLeft">

                                                <h3>Bookmarks</h3>
                                                                                                <ul class="rFolder">
                    <li class="rFolderItem">
                                <a href="http://www.NetBSD.org/"
               title="NetBSD is a free, secure, and highly portable Unix-like Open Source operating system available for many platforms, from large-scale server systems to powerful desktop systems to handheld and embedded devices."
               class="rBookmark0">The NetBSD Project</a>
                </li>
            <li class="rFolderItem">
                                <a href="http://wiki.netbsd.org/"
               title="The NetBSD Wiki is a collaborative writing project to build useful resources for NetBSD users."
               class="rBookmark0">NetBSD Wiki</a>
                </li>
                    </ul>
	
						<h3>Feeds</h3>
						    <ul class="rFeeds">
    <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom">All</a></li>
                <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FGeneral">/General</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FRelease+engineering">/Release engineering</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FNetworking">/Networking</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FDevelopment">/Development</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FEvents">/Events</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FThe+NetBSD+Foundation">/The NetBSD Foundation</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPackages">/Packages</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FSecurity">/Security</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPorts">/Ports</a></li>
        <li><a href="http://blog.netbsd.org/tnf/feed/comments/atom">Comments</a></li>
    </ul>

			</div>
			</div>
			<div class="mainContent">
				<div class="half noBorderOnLeft" style="border-left: 1px dotted #000">
							  		              <h2><a href="http://blog.netbsd.org/tnf/entry/netbsd_6_1_1_released">NetBSD 6.1.1 released</a></h2><BR>
<div class="descr">August 22, 2013 posted by <i>Soren Jacobsen</I></div><BR>

  <p> The NetBSD Project is pleased to announce NetBSD 6.1.1, the first security/bugfix update of the NetBSD 6.1 release branch.  It represents a selected subset of fixes deemed important for security or stability reasons.</p>

<p>For more details, please see the <a href="http://www.netbsd.org/releases/formal-6/NetBSD-6.1.1.html">6.1.1 release notes</a>.</p>

<p>Complete source and binaries for NetBSD 6.1.1 are available for download at many sites around the world. A list of download sites providing FTP, AnonCVS, SUP, and other services may be found at <a href="http://www.NetBSD.org/mirrors/">http://www.NetBSD.org/mirrors/</a>.</p>

   [<a href="http://blog.netbsd.org/tnf/entry/netbsd_6_1_1_released#comments">1 comment</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/sx_support_added">SX support added</a></h2><BR>
<div class="descr">July 03, 2013 posted by <i>Michael Lorenz</I></div><BR>

  Support for Sun's SX rendering engine ( found in the SparcStation 20 and 10SX's memory controllers ) has been added, both for the console and X. Both drivers support basic acceleration ( block copy, rectangle fill, character drawing in the kernel ), the Xorg driver also supports Xrender acceleration. This probably makes SX the oldest supported hardware which can do that.<p>[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/sx_support_added">Read More</a>]

 [<a href="http://blog.netbsd.org/tnf/entry/sx_support_added#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/google_code_in_2012_2013">Google Code-In 2012/2013 (from jdf)</a></h2><BR>
<div class="descr">July 02, 2013 posted by <i>Matthew Sporleder</I></div><BR>

  <p>
Google Code-In (GCi) is a project like Google Summer Of Code (GSoC),
but for younger students. While GSoC is aimed at university students,
i.e. for people usually of age 19 or older, GCi wants to recruit
pupils for Open Source projects.
</p>
<p>
When applying for participation, every project had to create a large number of 
potentially small tasks for students. A task was meant to be two hours of work of 
an experienced developer, and feasible to be done by a person 13 to 18 years 
old. Google selected ten participating organisations (this time, NetBSD 
was the only BSD participating) to insert their tasks into Google Melange (the 
platform which is used for managing GCi and GSoC).
</p>
<p>
Then, the students registered at Google Melange, chose a project they wanted to 
work on, and claimed tasks to do. There were many chats in the NetBSD code 
channel for students coming in and asking questions about their tasks.
</p>
<p>
After GCi was over, every organisation had to choose their two favourite 
students who did the best work. For NetBSD, the choice was difficult, as there 
were more than two students doing great work, but in the end we chose Mingzhe 
Wang and Matthew Bauer.
These two "grand price winners" were given a trip to Mountain View to visit the 
Google headquarters and meet with other GCi price winners.
</p>
<p>
You can see the results on the
<a href="http://wiki.netbsd.org/projects/code-in_2012/">corresponding wiki page</a>
</p>
<p>
There were 89 finished tasks, ranging from research tasks (document how other 
projects manage their documentation), creating howtos, trying out software on 
NetBSD, writing code (ATF tests and Markdown converters and more), writing 
manpages and documentation, fixing bugs and converting documentation from the 
website to the wiki.
</p>
<p>
Overall, it was a nice experience for NetBSD. On the one hand, some real work 
was done (for many of them, integration is still pending). On the other hand, it 
was a stressful time for the NetBSD mentors supervising the students and helping 
them on their tasks. Especially, we had to learn many lessons (you will find 
them on the wiki page for GCi 2012), but next time, we will do much better.
We will try to apply again next year, but we will need a large bunch of new 
possible tasks to be chosen again.
</p>
<p>
So if you think you have a task which doesn't require great prior knowledge, and 
is solvable within two hours by an experienced developer, but also by a 13-18 
year old within finite time, feel free to contact us with an outline, or write 
it directly to the <a href="http://wiki.netbsd.org/projects/code-in/">wiki page for Code-In</a>
in the NetBSD wiki.
</p>

   [<a href="http://blog.netbsd.org/tnf/entry/google_code_in_2012_2013#comments">1 comment</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/jdf_s_summer_of_code">jdf's Summer of Code project</a></h2><BR>
<div class="descr">June 27, 2013 posted by <i>Matthew Sporleder</I></div><BR>

  Julian Djamil Fagir wrote a blog post about <a href="http://www.komkon2.de/dokuwiki/doku.php?id=blog:participating_in_gsoc">his GSoC project</a><br />

<p>
<blockquote>As one of five, I've been chosen for participating in Google Summer Of Code (GSoC) this year for NetBSD. My project is to write a binary upgrade tool for NetBSD, optionally with a “live update” functionality.
</p>
<p>
Why an upgrade tool? – Yes, updating currently is easy. You download the set tarballs from a mirror, unpack the kernel, reboot, unpack the rest, reboot, and done. But this is an exhausting procedure, and you have to know that there are actually updates, and what they affect.
</p>
</blockquote>

<a href="http://www.komkon2.de/dokuwiki/doku.php?id=blog:participating_in_gsoc">read more</a><br />

 [<a href="http://blog.netbsd.org/tnf/entry/jdf_s_summer_of_code#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/support_for_marvell_armada_xp">Support for Marvell Armada XP</a></h2><BR>
<div class="descr">May 30, 2013 posted by <i>Radoslaw Kujawa</I></div><BR>

  <p>NetBSD now includes support for Marvell Armada XP SoCs. The port was done by <a href="http://www.semihalf.com">Semihalf</a> and sponsored by <a href="http://www.marvell.com">Marvell</a>, who have generously agreed to release the source code. 

<p>This work was integrated into the NetBSD/evbarm port. The kernel for Armada XP is built from the "ARMADAXP" configuration.

<p>Currently supported hardware include Marvell DB-MV784MP-GP development boards. Adding support for more Armada XP-based boards should be relatively easy.

<p>The port includes support for the PJ4B CPU core and most of the SoC's peripherals:
<ul>
<li>UART</li>
<li>SATA</li>
<li>PCI Express</li>
<li>I2C</li>
<li>SPI</li>
<li>USB</li>
</ul>

<p>SMP and on-chip Ethernet are not supported yet (however it is possible to use a PCI Express based Ethernet card).


   [<a href="http://blog.netbsd.org/tnf/entry/support_for_marvell_armada_xp#comments">1 comment</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/netbsd_s_google_summer_of2">NetBSD's Google Summer of Code&trade; Projects 2013</a></h2><BR>
<div class="descr">May 28, 2013 posted by <i>S.P.Zeidler</I></div><BR>

  The following projects have been chosen for Google Summer of Code&trade; this year (sorted by student's last name):

<ul>
<li>Port Linux's drm/kms/gem/i915</li>
<li>Student: Myron Aub</li>
</ul>

<ul>
<li>System upgrade</li>
<li>Student: gnrp</li>
</ul>

<ul>
<li>Implement file system flags to scrub data blocks before deletion</li>
<li>Student: Przemyslaw Sierocinski</li>
</ul>

<ul>
<li>Make NetBSD a supported guest OS under VirtualBox</li>
<li>Student: Haomai Wang</li>
</ul>

<ul>
<li>Defragmentation for FFS in NetBSD</li>
<li>Student: Manuel Wiesinger</li>
</ul>

<p>We hope these students will have an interesting, successful, and also fun summer working with us, heap glory upon their names and do their mentors proud. :)

<p>We thank all students who discussed and submitted proposals; as in every year, slots are limited and we have to let go worthy proposals.



   [<a href="http://blog.netbsd.org/tnf/entry/netbsd_s_google_summer_of2#comments">2 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/firefox_on_sparc64">Firefox on sparc64</a></h2><BR>
<div class="descr">May 26, 2013 posted by <i>Martin Husemann</I></div><BR>

  New firefox will be available for NetBSD/sparc64 again starting with the import of the official version 22 release into pkgsrc.[<a class="readmore" href="http://blog.netbsd.org/tnf/entry/firefox_on_sparc64">Read More</a>]

   [<a href="http://blog.netbsd.org/tnf/entry/firefox_on_sparc64#comments">4 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/beaglebone_docs_pointer_needs_improvement">beaglebone docs pointer -- needs improvement</a></h2><BR>
<div class="descr">May 25, 2013 posted by <i>Matthew Sporleder</I></div><BR>

  NetBSD works on the <a href="http://beagleboard.org/Products/BeagleBone">BeagleBone</a> and improvements continue to happen, but we could use some help updating the docs.
<p />
If you are using the port (or want to) make sure you email www with some improvements to the <a href="http://wiki.netbsd.org/ports/evbarm/beaglebone/">BeagleBone wiki page.</a>

 [<a href="http://blog.netbsd.org/tnf/entry/beaglebone_docs_pointer_needs_improvement#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/netbsd_6_1_and_6">NetBSD 6.1 (and 6.0.2!) Released</a></h2><BR>
<div class="descr">May 18, 2013 posted by <i>Jeff Rizzo</I></div><BR>

  <p> The NetBSD Project is pleased to announce NetBSD 6.1, the first feature update of the NetBSD 6 release branch.  It represents a selected subset of fixes deemed important for security or stability reasons, as well as new features and enhancements.</p>

<p>Simultaneously, the NetBSD Project is pleased to announce NetBSD 6.0.2, the second security/bugfix update of the NetBSD 6.0 release branch. It represents a selected subset of fixes deemed important for security or stability reasons, without new features.</p>

<p>For more details, please see the <a href="http://www.netbsd.org/releases/formal-6/NetBSD-6.1.html">6.1 release notes</a> and the <a href="http://www.netbsd.org/releases/formal-6/NetBSD-6.0.2.html">6.0.2 release notes</a></p>

Complete source and binaries for NetBSD 6.1 and 6.0.2 are available for download at many sites around the world. A list of download sites providing FTP, AnonCVS, SUP, and other services may be found at <a href="http://www.NetBSD.org/mirrors/">http://www.NetBSD.org/mirrors/</a>.

   [<a href="http://blog.netbsd.org/tnf/entry/netbsd_6_1_and_6#comments">3 comments</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/netbsd_6_1_rc4">NetBSD 6.1 Release Candidate 4</a></h2><BR>
<div class="descr">May 02, 2013 posted by <i>Jeff Rizzo</I></div><BR>

  <p>The fourth release candidate of NetBSD 6.1 is now available for download at:
<a href="http://ftp.NetBSD.org/pub/NetBSD/NetBSD-6.1_RC4/">
http://ftp.NetBSD.org/pub/NetBSD/NetBSD-6.1_RC4/</a>.  It is expected that this will be the final release candidate, with the official release following very soon.
</p>
<p>
(Please note that while the third release candidate (RC3) was tagged and built, it was never officially released)
</p>
<p>
NetBSD 6.1 will be the first feature update for the NetBSD 6 branch.  There are many new drivers, some new features, and many bug fixes!  Fixes since RC2 include:
</p>
<ul>
<li>Updated the fix for <a href="http://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2013-003.txt.asc">SA-2013-003 (RNG bug may result in weak cryptographic keys)</a></li>
<li>Fixes to <a href="http://netbsd.gw.com/cgi-bin/man-cgi?npfctl++NetBSD-6.1">npfctl(8)</a> parsing and error handling</li>
<li>Fix <a href="http://netbsd.gw.com/cgi-bin/man-cgi?sendto++NetBSD-6.1">sendto(2)</a> issue with IPv6 UDP datagrams.  <a href="http://gnats.NetBSD.org/47408">PR#47408</a>.</li>
<li>Raspberry Pi: fix handling of large packets in USB host controller</li>
<li>Fixed an RPC memory corruption issue. <a href="http://gnats.NetBSD.org/13082">PR#13082</a></li>
<li>Fixed ACPI issues affecting some AMD systems. <a href="http://gnats.NetBSD.org/47016">PR#47016</a>, <a href="http://gnats.NetBSD.org/47648">PR#47648</a>.</li>
<li>Change <a href="http://www.netbsd.org/ports/vax/">vax</a> MAXPARTITION from 16 to 12, addressing boot issues on some systems</li>
<li>Bump libpthread minor version to libpthread.so.1.1 for the addition of pthread_cond_setclock() earlier in the 6.1 release cycle; note that this is *NOT* the same as libpthread.so.1.1 in NetBSD-current. (libpthread.so in NetBSD-current is already at version 1.2)</li>
<li>Provide libc stubs to libpthread, allowing libpthread to be dlopen()ed.</li>
<li>Fix a userland-triggered panic on <a href="http://www.netbsd.org/ports/x68k/">x68k</a> systems.</li>
</ul>
<p>
A complete list of changes can be found at: <br>
<a href="http://ftp.NetBSD.org/pub/NetBSD/NetBSD-6.1_RC4/CHANGES-6.1">
http://ftp.NetBSD.org/pub/NetBSD/NetBSD-6.1_RC4/CHANGES-6.1</a>
</p>
<p>
Please help us test this and any upcoming release candidates as much as possible. Remember, any feedback is good feedback. We'd love to hear from you, whether you've got a complaint or a compliment.
</p>

   [<a href="http://blog.netbsd.org/tnf/entry/netbsd_6_1_rc4#comments">1 comment</a>]
 
</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/thylacine_usb_driver">Thylacine USB driver</a></h2><BR>
<div class="descr">April 28, 2013 posted by <i>Matthew Sporleder</I></div><BR>

  Zorro attachment code for <a href="http://netbsd.gw.com/cgi-bin/man-cgi?slhci+4+NetBSD-current">slhci(4)</a> driver was added. Thylacine USB card is now supported. However, so far only keyboards and mice work reliably. To use them instead of standard Amiga keyboard and mouse wscons kernel is required. 

 [<a href="http://blog.netbsd.org/tnf/entry/thylacine_usb_driver#comment-form">0 comments</a>]

</p>


<p>&nbsp;</p>

            <h2><a href="http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for">A Rump Kernel Hypervisor for the Linux Kernel</a></h2><BR>
<div class="descr">April 23, 2013 posted by <i>Antti Kantee</I></div><BR>

  <p>
Ever since I realized that the
<a href="http://www.netbsd.org/docs/rump/">anykernel</a>
was the best way to construct a modern general purpose operating system
kernel, I have been performing experiments by running unmodified
NetBSD kernel drivers in <i>rump kernels</i> in various environments
(nb. here <i>driver</i> does not mean a hardware device driver, but
any driver like a file system driver or TCP driver).
These experiments have included <a
href="https://github.com/anttikantee/buildrump.sh">userspaces of various platforms</a>,
<a href="https://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable">binary kernel modules on Linux</a>
and
<a href="https://twitter.com/anttikantee/status/314153384548638720">others</a>, and
<a href="https://blog.netbsd.org/tnf/entry/kernel_drivers_compiled_to_javascript">compiling kernel drivers to javascript</a>
and running them natively in a web browser.  I have also claimed that
the anykernel allows harnessing drivers from a general purpose OS
onto more specialized embedded computing devices which are becoming the
new norm.  This is an attractive possibility because while writing drivers
is easy, making them handle all the abnormal conditions of the real world
is a time-consuming process.  Since the above-mentioned experiments
were done on POSIX platforms (yes, even the javascript one), the
experiments did not fully support the claim.  The most interesting,
decidedly non-POSIX platform I could think of for experimentation was
the Linux kernel.  Even though it had been several years since I last
worked in the Linux kernel, my hypothesis was that it would be easy
and fast to get unmodified NetBSD kernel drivers running in the Linux kernel as rump kernels.
</p>

<p>
A rump kernel runs on top of the rump kernel hypervisor.  The hypervisor
provides high level interfaces to host features, such as memory allocation
and thread creation.  In this case, the Linux kernel is the host.
In principle, there are three steps in getting a rump kernel to run in
a given environment.  In reality, I prefer a more iterative approach,
but the development can be divided into three steps all the same.

<ol>
  <li>implement generic rump kernel hypercalls, such as memory allocation,
      thread creation and synchronization</li>
  <li>figure out how to compile and run the rump kernel plus hypervisor
      in the target environment</li>
  <li>implement I/O related hypercalls for whatever I/O you plan to do</li>
</ol>
</p>

<p>
Getting basic functionality up and running was a relatively
straightforward process.  The only issue that required some thinking was
an application binary interface (ABI) mismatch.  I was testing on x86 where Linux kernel ABI uses <tt>-mregparm=3</tt>,
which means that function arguments are passed in registers where
possible.  NetBSD always passes arguments on the stack.  When two ABIs
collide, the code may run, but since function arguments passed
between the two ABIs result in garbage, eventually an error
will be hit perhaps in the form of accessing invalid memory.
The C code was easy enough to "fix" by applying the appropriate compiler
flags.  In addition to C code, a rump kernel uses a handful of assembly
routines from NetBSD, mostly pertaining to optimizations (e.g. <tt>ffs()</tt>),
but also to access the atomic memory operations of the platform.
After assembly routines had been handled, it was possible
to load a <a href="https://github.com/anttikantee/rumpuser-linuxkernel/blob/master/main.c">Linux kernel module which bootstraps a
rump kernel</a> in the Linux kernel and <a href="https://github.com/anttikantee/rumpuser-linuxkernel/blob/master/demo-fs.c">does some
file system operations</a> on the fictional <i>kernfs</i> file system.
A screenshot of the resulting dmesg output is shown below.
</p>

<!-- no idea why you can't upload images onto the blog platform anymore ... -->
<img src="http://ftp.netbsd.org/pub/NetBSD/misc/pooka/images/fs-demo.png" alt="fs demo screenshot"/>

<p>
It is one thing to execute a computation and an entirely different
thing to perform I/O.  To test I/O capabilities, I ran a rump kernel
providing a TCP/IP driver inside the Linux kernel.  For a networking
stack to be able to do anything sensible, the interface layer needs
to be able to shuffle packets.  The quickest way to implement
the hypercalls for packet shuffling was to use the same method
as a userspace virtual TCP/IP stack might use: read/write packets using
the tap device.
Some might say that doing this from inside the kernel is cheating, but
given that the alternative was to copypaste the tuntap driver and
edit it slightly, I call my approach constructive laziness.
</p>

<p>
The <a href="https://github.com/anttikantee/rumpuser-linuxkernel/blob/master/demo-net.c">demo itself</a> opens a TCP socket to port 80 on
vger.kernel.org (IP address 0x43b484d1 if you want to be really precise),
does a HTTP get for "/" and displays the last 500 bytes of the result.
TCP/IP is handled by the rump kernel, not by the Linux kernel.
Think of it as the Linux kernel having two alternative TCP/IP stacks.
Again, a screenshot of the resulting dmesg is shown below.  Note that
unlike in the first screenshot, there is no printout for the root file
system because the configuration used here does not include any file
system support.  Yes, you can ping <i>10.0.2.17</i>.
</p>

<img src="http://ftp.netbsd.org/pub/NetBSD/misc/pooka/images/netdemo.png" alt="net demo screenshot"/>

<p>
As hypothesized, a rump kernel hypervisor for the Linux kernel
was easy and straightforward to implement.  Furthermore, it could be done
without making any changes to the existing hypercall interface thereby
reinforcing the belief that unmodified NetBSD kernel drivers can run
on top of most any embedded firmwares just by implementing a light
hypervisor layer.
</p>

<p>
There were no challenges in the experiment, only annoyances.
As Linux does not support rump kernels, I had to revert back to
the archaic full OS approach to kernel development.  The drawbacks of
the full OS approach include for example suffering multi-second
reboot cycles during iterative development.  The other tangential issue
that I spent a disproportionately large amount of time with was thinking
about how releasing this code would affect existing NetBSD code due
to GPL involvement.  My conclusion was that this does not matter since
all code used by the current demo is open source anyway, and if someone
wants to use my code in a product, it is their problem, not mine.
</p>

<p>
For people interested in examining the implementation, I put the
source code for the hypervisor along with the test code in a git repo
<a href="https://github.com/anttikantee/rumpuser-linuxkernel">here</a>.
The repository also contains the demos linked from
this article.  The NetBSD kernel drivers I used are available from <a
href="http://ftp.netbsd.org/pub/NetBSD/">ftp.netbsd.org</a> or by
getting <a href="https://github.com/anttikantee/buildrump.sh">buildrump.sh</a>
and running <tt>./buildrump.sh checkout</tt>.
</p>


   [<a href="http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for#comments">2 comments</a>]
 
</p>


<p>&nbsp;</p>

    		  <div class="next-prev">
		  		                                 <a href="/tnf/">Main</a>
                | <a href="/tnf/?page=1">Next page</a> &raquo;
    		  		  </div>
		  				</div>
			</div>
			<div class="clearer"></div>
		</div>
		<div class="rowOfBoxes">
			<div id="footer">
				<span class="footfeed"><a href="http://www.NetBSD.org/cgi-bin/feedback.cgi">Contact</a> |</span> <span class="footcopy"><a href="http://www.NetBSD.org/about/disclaimer.html">Disclaimer</a> | <span class="copyright">Copyright © 1994-2009 The NetBSD Foundation, Inc.</span> ALL RIGHTS RESERVED.<br />
				NetBSD<sup>®</sup> is a registered trademark of The NetBSD Foundation, Inc.</span>
			</div>
		</div>
	</body>
</html>

