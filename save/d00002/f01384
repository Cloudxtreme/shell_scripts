<style type="text/css"><!--body { background-color: #fff;
       color: #000; }
.codehilite .important { background-color: #ffc; }
.codehilite .hll { background-color: #ffffcc }
.codehilite  { background: #eee8d5; }
.codehilite .c { color: #2aa198; font-style: italic } /* Comment */
.codehilite .err { border: 1px solid #FF0000 } /* Error */
.codehilite .k { color: #859900; font-weight: bold } /* Keyword */
.codehilite .o { color: #666666 } /* Operator */
.codehilite .cm { color: #408080; font-style: italic } /* Comment.Multiline */
.codehilite .cp { color: #BC7A00 } /* Comment.Preproc */
.codehilite .c1 { color: #408080; font-style: italic } /* Comment.Single */
.codehilite .cs { color: #408080; font-style: italic } /* Comment.Special */
.codehilite .gd { color: #A00000 } /* Generic.Deleted */
.codehilite .ge { font-style: italic } /* Generic.Emph */
.codehilite .gr { color: #FF0000 } /* Generic.Error */
.codehilite .gh { color: #268bd2; font-weight: bold } /* Generic.Heading */
.codehilite .gi { color: #00A000 } /* Generic.Inserted */
.codehilite .go { color: #808080 } /* Generic.Output */
.codehilite .gp { color: #268bd2; font-weight: bold } /* Generic.Prompt */
.codehilite .gs { font-weight: bold } /* Generic.Strong */
.codehilite .gu { color: #6c71c4; font-weight: bold } /* Generic.Subheading */
.codehilite .gt { color: #0040D0 } /* Generic.Traceback */
.codehilite .kc { color: #859900; font-weight: bold } /* Keyword.Constant */
.codehilite .kd { color: #859900; font-weight: bold } /* Keyword.Declaration */
.codehilite .kn { color: #859900; font-weight: bold } /* Keyword.Namespace */
.codehilite .kp { color: #859900 } /* Keyword.Pseudo */
.codehilite .kr { color: #859900; font-weight: bold } /* Keyword.Reserved */
.codehilite .kt { color: #B00040 } /* Keyword.Type */
.codehilite .m { color: #666666 } /* Literal.Number */
.codehilite .s { color: #BA2121 } /* Literal.String */
.codehilite .na { color: #7D9029 } /* Name.Attribute */
.codehilite .nb { color: #859900 } /* Name.Builtin */
.codehilite .nc { color: #0000FF; font-weight: bold } /* Name.Class */
.codehilite .no { color: #880000 } /* Name.Constant */
.codehilite .nd { color: #d33682 } /* Name.Decorator */
.codehilite .ni { color: #999999; font-weight: bold } /* Name.Entity */
.codehilite .ne { color: #D2413A; font-weight: bold } /* Name.Exception */
.codehilite .nf { color: #0000FF } /* Name.Function */
.codehilite .nl { color: #A0A000 } /* Name.Label */
.codehilite .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
.codehilite .nt { color: #859900; font-weight: bold } /* Name.Tag */
.codehilite .nv { color: #2aa198 } /* Name.Variable */
.codehilite .ow { color: #d33682; font-weight: bold } /* Operator.Word */
.codehilite .w { color: #bbbbbb } /* Text.Whitespace */
.codehilite .mf { color: #666666 } /* Literal.Number.Float */
.codehilite .mh { color: #666666 } /* Literal.Number.Hex */
.codehilite .mi { color: #666666 } /* Literal.Number.Integer */
.codehilite .mo { color: #666666 } /* Literal.Number.Oct */
.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */
.codehilite .sc { color: #BA2121 } /* Literal.String.Char */
.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */
.codehilite .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */
.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */
.codehilite .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */
.codehilite .sx { color: #859900 } /* Literal.String.Other */
.codehilite .sr { color: #BB6688 } /* Literal.String.Regex */
.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */
.codehilite .ss { color: #2aa198 } /* Literal.String.Symbol */
.codehilite .bp { color: #859900 } /* Name.Builtin.Pseudo */
.codehilite .vc { color: #2aa198 } /* Name.Variable.Class */
.codehilite .vg { color: #2aa198 } /* Name.Variable.Global */
.codehilite .vi { color: #2aa198 } /* Name.Variable.Instance */
.codehilite .il { color: #666666 } /* Literal.Number.Integer.Long */
--></style>
<h1>singleton</h1>
<p>This is a recipe for conversion of current <em>mvn-rpmbuild</em> spec file into <em>xmvn</em>
style spec file.</p>
<p>In this recipe we'll show how to convert Maven projects using following
keywords:</p>
<ul>
<li>artifact aliases</li>
<li>compatibility symlinks</li>
<li>singleton packaging</li>
</ul>
<h2>Original spec file content</h2>
<table class="codehilitetable"><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309</pre></div></td><td class="code"><div class="codehilite"><pre><span class="cp">%if</span> 0%{?fedora}
%bcond_without extensions
<span class="cp">%endif</span>

%global short_name guice

<span class="gh">Name</span><span class="p">:</span>           google-<span class="kc">%{short_name}</span>
<span class="gh">Version</span><span class="p">:</span>        3.1.2
<span class="gh">Release</span><span class="p">:</span>        8<span class="nv">%{?dist}</span>
<span class="gh">Summary</span><span class="p">:</span>        Lightweight dependency injection framework for Java 5 and above
<span class="gh">Group</span><span class="p">:</span>          Development/Libraries
<span class="gh">License</span><span class="p">:</span>        ASL 2.0
<span class="gh">URL</span><span class="p">:</span>            https://github.com/sonatype/sisu-<span class="kc">%{short_name}</span>
<span class="c"># ./create-tarball.sh %{version}</span>
<span class="gh">Source</span><span class="p">:</span>         <span class="kc">%{name}</span>-<span class="kc">%{version}</span>.tar.xz
<span class="gh">BuildArch</span><span class="p">:</span>      noarch

<span class="gh">BuildRequires</span><span class="p">:</span>  java-devel
<span class="gh">BuildRequires</span><span class="p">:</span>  jpackage-utils
<span class="gh">BuildRequires</span><span class="p">:</span>  javapackages-tools &gt;= 0.7.0
<span class="gh">BuildRequires</span><span class="p">:</span>  maven
<span class="gh">BuildRequires</span><span class="p">:</span>  maven-remote-resources-plugin
<span class="gh">BuildRequires</span><span class="p">:</span>  apache-resource-bundles
<span class="gh">BuildRequires</span><span class="p">:</span>  aopalliance
<span class="gh">BuildRequires</span><span class="p">:</span>  atinject
<span class="gh">BuildRequires</span><span class="p">:</span>  cglib
<span class="gh">BuildRequires</span><span class="p">:</span>  guava
<span class="gh">BuildRequires</span><span class="p">:</span>  slf4j

<span class="cp">%if</span> %{with extensions}
<span class="gh">BuildRequires</span><span class="p">:</span>  hibernate-jpa-2.0-api
<span class="gh">BuildRequires</span><span class="p">:</span>  springframework-beans
<span class="gh">BuildRequires</span><span class="p">:</span>  tomcat-servlet-3.0-api
<span class="cp">%endif</span>

<span class="c"># Test dependencies:</span>
<span class="cp">%if</span> 0
<span class="gh">BuildRequires</span><span class="p">:</span>  maven-surefire-provider-testng
<span class="gh">BuildRequires</span><span class="p">:</span>  aqute-bnd
<span class="gh">BuildRequires</span><span class="p">:</span>  atinject-tck
<span class="gh">BuildRequires</span><span class="p">:</span>  easymock2
<span class="gh">BuildRequires</span><span class="p">:</span>  felix-framework
<span class="gh">BuildRequires</span><span class="p">:</span>  hibernate3-entitymanager
<span class="gh">BuildRequires</span><span class="p">:</span>  mvn(org.hsqldb:hsqldb-j5)
<span class="gh">BuildRequires</span><span class="p">:</span>  testng
<span class="cp">%endif</span>

<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       aopalliance
<span class="gh">Requires</span><span class="p">:</span>       atinject
<span class="gh">Requires</span><span class="p">:</span>       cglib
<span class="gh">Requires</span><span class="p">:</span>       guava
<span class="gh">Requires</span><span class="p">:</span>       slf4j
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-parent = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>
<span class="gh">Provides</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span>
Put simply, Guice alleviates the need for factories and the use of new
in your Java code. Think of Guice&#39;s @Inject as the new new. You will
still need to write factories in some cases, but your code will not
depend directly on them. Your code will be easier to change, unit test
and reuse in other contexts.

Guice embraces Java&#39;s type safe nature, especially when it comes to
features introduced in Java 5 such as generics and annotations. You
might think of Guice as filling in missing features for core
Java. Ideally, the language itself would provide most of the same
features, but until such a language comes along, we have Guice.

Guice helps you design better APIs, and the Guice API itself sets a
good example. Guice is not a kitchen sink. We justify each feature
with at least three use cases. When in doubt, we leave it out. We
build general functionality which enables you to extend Guice rather
than adding every feature to the core framework.

<span class="nd">%package</span> -n %{short_name}-parent
<span class="gh">Summary</span><span class="p">:</span>        Guice parent POM
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils

<span class="nd">%description</span> -n %{short_name}-parent
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides parent POM for Guice modules.

%if %{with extensions}

<span class="nd">%package</span> -n %{short_name}-assistedinject
<span class="gh">Summary</span><span class="p">:</span>        AssistedInject extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-assistedinject
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides AssistedInject module for Guice.

<span class="nd">%package</span> -n %{short_name}-extensions
<span class="gh">Summary</span><span class="p">:</span>        Extensions for Guice
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-extensions
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides extensions POM for Guice.

<span class="nd">%package</span> -n %{short_name}-grapher
<span class="gh">Summary</span><span class="p">:</span>        Grapher extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-assistedinject = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-multibindings = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-grapher
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Grapher module for Guice.

<span class="nd">%package</span> -n %{short_name}-jmx
<span class="gh">Summary</span><span class="p">:</span>        JMX extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-jmx
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides JMX module for Guice.

<span class="nd">%package</span> -n %{short_name}-jndi
<span class="gh">Summary</span><span class="p">:</span>        JNDI extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-jndi
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides JNDI module for Guice.

<span class="nd">%package</span> -n %{short_name}-multibindings
<span class="gh">Summary</span><span class="p">:</span>        MultiBindings extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-multibindings
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides MultiBindings module for Guice.

<span class="nd">%package</span> -n %{short_name}-persist
<span class="gh">Summary</span><span class="p">:</span>        Persist extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       hibernate-jpa-2.0-api
<span class="gh">Requires</span><span class="p">:</span>       tomcat-servlet-3.0-api
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-persist
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Persist module for Guice.

<span class="nd">%package</span> -n %{short_name}-servlet
<span class="gh">Summary</span><span class="p">:</span>        Servlet extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       tomcat-servlet-3.0-api
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-servlet
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Servlet module for Guice.

<span class="nd">%package</span> -n %{short_name}-spring
<span class="gh">Summary</span><span class="p">:</span>        Spring extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       springframework-beans
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-spring
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Spring module for Guice.

<span class="nd">%package</span> -n %{short_name}-throwingproviders
<span class="gh">Summary</span><span class="p">:</span>        ThrowingProviders extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-throwingproviders
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides ThrowingProviders module for Guice.

%endif # with extensions

<span class="nd">%package</span> javadoc
<span class="gh">Summary</span><span class="p">:</span>        API documentation for Guice
<span class="gh">Group</span><span class="p">:</span>          Documentation
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Provides</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-javadoc = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> javadoc
This package provides %{summary}.

<span class="nd">%prep</span>
<span class="k">%setup</span> -q

<span class="c"># We don&#39;t have struts2 in Fedora yet.</span>
%pom_disable_module struts2 extensions

<span class="c"># Remove additional build profiles, which we don&#39;t use anyways</span>
<span class="c"># and which are only pulling additional dependencies.</span>
%pom_xpath_remove pom:project/pom:profiles core

<span class="c"># Animal sniffer is only causing problems. Disable it for now.</span>
%pom_remove_plugin :animal-sniffer-maven-plugin core
%pom_remove_plugin :animal-sniffer-maven-plugin extensions

<span class="c"># We don&#39;t have the custom doclet used by upstream. Remove</span>
<span class="c"># maven-javadoc-plugin to generate javadocs with default style.</span>
%pom_remove_plugin :maven-javadoc-plugin

<span class="c"># Don&#39;t try to build extension modules unless they are needed</span>
<span class="cp">%if</span> %{without extensions}
%pom_disable_module extensions
<span class="cp">%endif</span>

<span class="nd">%build</span>
<span class="c"># Skip tests because of missing dependency (hsqldb-j5).</span>
mvn-rpmbuild -e -Dmaven.test.skip=true verify javadoc:aggregate

<span class="nd">%install</span>
<span class="c"># directories</span>
install -d -m 755 <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>
install -d -m 755 <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>
install -d -m 755 <span class="kc">%{buildroot}</span><span class="kp">%{_javadocdir}</span>/<span class="kc">%{name}</span>
<span class="c"># JARs</span>
install -p -m 644 core/target/sisu-<span class="kc">%{short_name}</span>-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{name}</span>.jar
<span class="c"># POMs</span>
install -p -m 644 pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-parent.pom
install -p -m 644 core/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{name}</span>.pom
<span class="c"># depmaps</span>
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-parent.pom -f parent
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{name}</span>.pom <span class="kc">%{short_name}</span>/<span class="kc">%{name}</span>.jar -a com.google.inject:guice
<span class="c"># javadoc</span>
cp -pr target/site/apidocs/* <span class="kc">%{buildroot}</span><span class="kp">%{_javadocdir}</span>/<span class="kc">%{name}</span>
<span class="c"># compat symlink</span>
ln -sf <span class="kc">%{short_name}</span>/<span class="kc">%{name}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>

<span class="c"># Extensions</span>
<span class="cp">%if</span> %{with extensions}
<span class="c"># JARs</span>
install -p -m 644 extensions/assistedinject/target/<span class="kc">%{short_name}</span>-assistedinject-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-assistedinject.jar
install -p -m 644 extensions/grapher/target/<span class="kc">%{short_name}</span>-grapher-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-grapher.jar
install -p -m 644 extensions/jmx/target/<span class="kc">%{short_name}</span>-jmx-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-jmx.jar
install -p -m 644 extensions/jndi/target/<span class="kc">%{short_name}</span>-jndi-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-jndi.jar
install -p -m 644 extensions/multibindings/target/<span class="kc">%{short_name}</span>-multibindings-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-multibindings.jar
install -p -m 644 extensions/persist/target/<span class="kc">%{short_name}</span>-persist-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-persist.jar
install -p -m 644 extensions/servlet/target/<span class="kc">%{short_name}</span>-servlet-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-servlet.jar
install -p -m 644 extensions/spring/target/<span class="kc">%{short_name}</span>-spring-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-spring.jar
install -p -m 644 extensions/throwingproviders/target/<span class="kc">%{short_name}</span>-throwingproviders-<span class="kc">%{version}</span>.jar <span class="kc">%{buildroot}</span><span class="kp">%{_javadir}</span>/<span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-throwingproviders.jar
<span class="c"># POMs</span>
install -p -m 644 extensions/assistedinject/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-assistedinject.pom
install -p -m 644 extensions/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-extensions.pom
install -p -m 644 extensions/grapher/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-grapher.pom
install -p -m 644 extensions/jmx/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-jmx.pom
install -p -m 644 extensions/jndi/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-jndi.pom
install -p -m 644 extensions/multibindings/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-multibindings.pom
install -p -m 644 extensions/persist/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-persist.pom
install -p -m 644 extensions/servlet/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-servlet.pom
install -p -m 644 extensions/spring/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-spring.pom
install -p -m 644 extensions/throwingproviders/pom.xml <span class="kc">%{buildroot}</span><span class="kp">%{_mavenpomdir}</span>/JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-throwingproviders.pom
<span class="c"># depmaps</span>
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-assistedinject.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-assistedinject.jar -f assistedinject -a com.google.inject.extensions:guice-assistedinject
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-extensions.pom -f extensions
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-grapher.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-grapher.jar -f grapher -a com.google.inject.extensions:guice-grapher
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-jmx.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-jmx.jar -f jmx -a com.google.inject.extensions:guice-jmx
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-jndi.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-jndi.jar -f jndi -a com.google.inject.extensions:guice-jndi
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-multibindings.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-multibindings.jar -f multibindings -a com.google.inject.extensions:guice-multibindings
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-persist.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-persist.jar -f persist -a com.google.inject.extensions:guice-persist
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-servlet.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-servlet.jar -f servlet -a com.google.inject.extensions:guice-servlet
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-spring.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-spring.jar -f spring -a com.google.inject.extensions:guice-spring
%add_maven_depmap JPP.<span class="kc">%{short_name}</span>-<span class="kc">%{short_name}</span>-throwingproviders.pom <span class="kc">%{short_name}</span>/<span class="kc">%{short_name}</span>-throwingproviders.jar -f throwingproviders -a com.google.inject.extensions:guice-throwingproviders
<span class="cp">%endif</span> # with extensions

<span class='important'><span class="nd">%files</span> -f .mfiles # see singleton packaging in notable differences</span>
<span class='important'><span class="kp">%{_javadir}</span>/<span class="kc">%{name}</span>.jar <span class="c"># see singleton packaging in notable differences</span></span>

<span class='important'><span class="nd">%files</span> -n %{short_name}-parent -f .mfiles-parent # see singleton packaging in notable differences</span>
<span class='important'><span class="k">%doc</span> COPYING <span class="c"># see singleton packaging in notable differences</span></span>

<span class='important'><span class="cp">%if</span> %{with extensions} # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-assistedinject -f .mfiles-assistedinject # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-extensions -f .mfiles-extensions # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-grapher -f .mfiles-grapher # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-jmx -f .mfiles-jmx # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-jndi -f .mfiles-jndi # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-multibindings -f .mfiles-multibindings # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-persist -f .mfiles-persist # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-servlet -f .mfiles-servlet # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-spring -f .mfiles-spring # see singleton packaging in notable differences</span>
<span class='important'><span class="nd">%files</span> -n %{short_name}-throwingproviders -f .mfiles-throwingproviders # see singleton packaging in notable differences</span>
<span class='important'><span class="cp">%endif</span> # with extensions # see singleton packaging in notable differences</span>

<span class='important'><span class="nd">%files</span> javadoc # see singleton packaging in notable differences</span>
<span class='important'><span class="k">%doc</span> COPYING <span class="c"># see singleton packaging in notable differences</span></span>
<span class='important'><span class="kp">%{_javadocdir}</span>/<span class="kc">%{name}</span> <span class="c"># see singleton packaging in notable differences</span></span>

<span class="nd">%changelog</span>
<span class="gu">* Fri Nov 16 2012 Mikolaj Izdebski &lt;mizdebsk@redhat.com&gt; - 3.1.2-8</span>
- Remove README
</pre></div>
</td></tr></table>

<h2>New xmvn spec file</h2>
<table class="codehilitetable"><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236</pre></div></td><td class="code"><div class="codehilite"><pre><span class="cp">%if</span> 0%{?fedora}
%bcond_without extensions
<span class="cp">%endif</span>

%global short_name guice

<span class="gh">Name</span><span class="p">:</span>           google-<span class="kc">%{short_name}</span>
<span class="gh">Version</span><span class="p">:</span>        3.1.2
<span class="gh">Release</span><span class="p">:</span>        9<span class="nv">%{?dist}</span>
<span class="gh">Summary</span><span class="p">:</span>        Lightweight dependency injection framework for Java 5 and above
<span class="gh">Group</span><span class="p">:</span>          Development/Libraries
<span class="gh">License</span><span class="p">:</span>        ASL 2.0
<span class="gh">URL</span><span class="p">:</span>            https://github.com/sonatype/sisu-<span class="kc">%{short_name}</span>
<span class="c"># ./create-tarball.sh %{version}</span>
<span class="gh">Source</span><span class="p">:</span>         <span class="kc">%{name}</span>-<span class="kc">%{version}</span>.tar.xz
<span class="gh">BuildArch</span><span class="p">:</span>      noarch

<span class="gh">BuildRequires</span><span class="p">:</span>  java-devel
<span class="gh">BuildRequires</span><span class="p">:</span>  jpackage-utils
<span class="gh">BuildRequires</span><span class="p">:</span>  javapackages-tools &gt;= 0.7.0
<span class="gh">BuildRequires</span><span class="p">:</span>  xmvn
<span class="gh">BuildRequires</span><span class="p">:</span>  maven-remote-resources-plugin
<span class="gh">BuildRequires</span><span class="p">:</span>  apache-resource-bundles
<span class="gh">BuildRequires</span><span class="p">:</span>  aopalliance
<span class="gh">BuildRequires</span><span class="p">:</span>  atinject
<span class="gh">BuildRequires</span><span class="p">:</span>  cglib
<span class="gh">BuildRequires</span><span class="p">:</span>  guava
<span class="gh">BuildRequires</span><span class="p">:</span>  slf4j

<span class="cp">%if</span> %{with extensions}
<span class="gh">BuildRequires</span><span class="p">:</span>  hibernate-jpa-2.0-api
<span class="gh">BuildRequires</span><span class="p">:</span>  springframework-beans
<span class="gh">BuildRequires</span><span class="p">:</span>  tomcat-servlet-3.0-api
<span class="cp">%endif</span>

<span class="c"># Test dependencies:</span>
<span class="cp">%if</span> 0
<span class="gh">BuildRequires</span><span class="p">:</span>  maven-surefire-provider-testng
<span class="gh">BuildRequires</span><span class="p">:</span>  aqute-bnd
<span class="gh">BuildRequires</span><span class="p">:</span>  atinject-tck
<span class="gh">BuildRequires</span><span class="p">:</span>  easymock2
<span class="gh">BuildRequires</span><span class="p">:</span>  felix-framework
<span class="gh">BuildRequires</span><span class="p">:</span>  hibernate3-entitymanager
<span class="gh">BuildRequires</span><span class="p">:</span>  mvn(org.hsqldb:hsqldb-j5)
<span class="gh">BuildRequires</span><span class="p">:</span>  testng
<span class="cp">%endif</span>

<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-parent = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>
<span class="gh">Provides</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span>
Put simply, Guice alleviates the need for factories and the use of new
in your Java code. Think of Guice&#39;s @Inject as the new new. You will
still need to write factories in some cases, but your code will not
depend directly on them. Your code will be easier to change, unit test
and reuse in other contexts.

Guice embraces Java&#39;s type safe nature, especially when it comes to
features introduced in Java 5 such as generics and annotations. You
might think of Guice as filling in missing features for core
Java. Ideally, the language itself would provide most of the same
features, but until such a language comes along, we have Guice.

Guice helps you design better APIs, and the Guice API itself sets a
good example. Guice is not a kitchen sink. We justify each feature
with at least three use cases. When in doubt, we leave it out. We
build general functionality which enables you to extend Guice rather
than adding every feature to the core framework.

<span class="nd">%package</span> -n %{short_name}-parent
<span class="gh">Summary</span><span class="p">:</span>        Guice parent POM

<span class="nd">%description</span> -n %{short_name}-parent
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides parent POM for Guice modules.

%if %{with extensions}

<span class="nd">%package</span> -n %{short_name}-assistedinject
<span class="gh">Summary</span><span class="p">:</span>        AssistedInject extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-assistedinject
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides AssistedInject module for Guice.

<span class="nd">%package</span> -n %{short_name}-extensions
<span class="gh">Summary</span><span class="p">:</span>        Extensions for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-extensions
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides extensions POM for Guice.

<span class="nd">%package</span> -n %{short_name}-grapher
<span class="gh">Summary</span><span class="p">:</span>        Grapher extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-assistedinject = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-multibindings = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-grapher
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Grapher module for Guice.

<span class="nd">%package</span> -n %{short_name}-jmx
<span class="gh">Summary</span><span class="p">:</span>        JMX extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-jmx
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides JMX module for Guice.

<span class="nd">%package</span> -n %{short_name}-jndi
<span class="gh">Summary</span><span class="p">:</span>        JNDI extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-jndi
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides JNDI module for Guice.

<span class="nd">%package</span> -n %{short_name}-multibindings
<span class="gh">Summary</span><span class="p">:</span>        MultiBindings extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       java
<span class="gh">Requires</span><span class="p">:</span>       jpackage-utils
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-multibindings
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides MultiBindings module for Guice.

<span class="nd">%package</span> -n %{short_name}-persist
<span class="gh">Summary</span><span class="p">:</span>        Persist extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-persist
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Persist module for Guice.

<span class="nd">%package</span> -n %{short_name}-servlet
<span class="gh">Summary</span><span class="p">:</span>        Servlet extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-servlet
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Servlet module for Guice.

<span class="nd">%package</span> -n %{short_name}-spring
<span class="gh">Summary</span><span class="p">:</span>        Spring extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-spring
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides Spring module for Guice.

<span class="nd">%package</span> -n %{short_name}-throwingproviders
<span class="gh">Summary</span><span class="p">:</span>        ThrowingProviders extension module for Guice
<span class="gh">Requires</span><span class="p">:</span>       <span class="kc">%{short_name}</span> = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> -n %{short_name}-throwingproviders
Guice is a lightweight dependency injection framework for Java 5
and above. This package provides ThrowingProviders module for Guice.

%endif # with extensions

<span class="nd">%package</span> javadoc
<span class="gh">Summary</span><span class="p">:</span>        API documentation for Guice
<span class="gh">Group</span><span class="p">:</span>          Documentation
<span class="gh">Provides</span><span class="p">:</span>       <span class="kc">%{short_name}</span>-javadoc = <span class="kc">%{version}</span>-<span class="kc">%{release}</span>

<span class="nd">%description</span> javadoc
This package provides %{summary}.

<span class="nd">%prep</span>
<span class="k">%setup</span> -q

<span class="c"># We don&#39;t have struts2 in Fedora yet.</span>
%pom_disable_module struts2 extensions

<span class="c"># Remove additional build profiles, which we don&#39;t use anyways</span>
<span class="c"># and which are only pulling additional dependencies.</span>
%pom_xpath_remove pom:project/pom:profiles core

<span class="c"># Animal sniffer is only causing problems. Disable it for now.</span>
%pom_remove_plugin :animal-sniffer-maven-plugin core
%pom_remove_plugin :animal-sniffer-maven-plugin extensions

<span class="c"># We don&#39;t have the custom doclet used by upstream. Remove</span>
<span class="c"># maven-javadoc-plugin to generate javadocs with default style.</span>
%pom_remove_plugin :maven-javadoc-plugin

<span class="c"># Don&#39;t try to build extension modules unless they are needed</span>
<span class="cp">%if</span> %{without extensions}
%pom_disable_module extensions
<span class="cp">%endif</span>

<span class="nd">%build</span>
<span class="cp">%if</span> %{with extensions}
<span class='important'>%mvn_alias <span class="s2">&quot;:guice-{assistedinject,grapher,jmx,jndi,multibindings,persist, \ # see artifact aliases in notable differences</span></span>
<span class='important'>   servlet,spring,throwingproviders}<span class="s2">&quot; &quot;</span>com.google.inject.extensions:guice-@1<span class="s2">&quot; # see artifact aliases in notable differences</span></span>
<span class="cp">%endif</span> # with extensions

<span class='important'>%mvn_file  <span class="s2">&quot;:guice-{*}&quot;</span>  <span class="kc">%{short_name}</span>/guice-@1 <span class="c"># see compatibility symlinks in notable differences</span></span>
<span class='important'>%mvn_file  <span class="s2">&quot;:sisu-guice&quot;</span> <span class="kc">%{short_name}</span>/<span class="kc">%{name}</span> <span class="c"># see compatibility symlinks in notable differences</span></span>
<span class='important'>%mvn_file  <span class="s2">&quot;:sisu-guice&quot;</span> <span class="kc">%{name}</span> <span class="c"># see compatibility symlinks in notable differences</span></span>
<span class='important'>%mvn_alias <span class="s2">&quot;:sisu-guice&quot;</span> <span class="s2">&quot;com.google.inject:guice&quot;</span> <span class="c"># see artifact aliases in notable differences</span></span>
<span class="c"># Skip tests because of missing dependency (hsqldb-j5).</span>
<span class='important'>%mvn_build -f -s <span class="c"># see singleton packaging in notable differences</span></span>

<span class="nd">%install</span>
%mvn_install

<span class="nd">%files</span> -f .mfiles-sisu-guice

<span class="nd">%files</span> -n %{short_name}-parent -f .mfiles-guice-parent
<span class="k">%doc</span> COPYING

<span class="cp">%if</span> %{with extensions}
<span class="nd">%files</span> -n %{short_name}-assistedinject -f .mfiles-guice-assistedinject
<span class="nd">%files</span> -n %{short_name}-extensions -f .mfiles-guice-extensions
<span class="nd">%files</span> -n %{short_name}-grapher -f .mfiles-guice-grapher
<span class="nd">%files</span> -n %{short_name}-jmx -f .mfiles-guice-jmx
<span class="nd">%files</span> -n %{short_name}-jndi -f .mfiles-guice-jndi
<span class="nd">%files</span> -n %{short_name}-multibindings -f .mfiles-guice-multibindings
<span class="nd">%files</span> -n %{short_name}-persist -f .mfiles-guice-persist
<span class="nd">%files</span> -n %{short_name}-servlet -f .mfiles-guice-servlet
<span class="nd">%files</span> -n %{short_name}-spring -f .mfiles-guice-spring
<span class="nd">%files</span> -n %{short_name}-throwingproviders -f .mfiles-guice-throwingproviders
<span class="cp">%endif</span> # with extensions

<span class="nd">%files</span> javadoc -f .mfiles-javadoc
<span class="k">%doc</span> COPYING

<span class="nd">%changelog</span>
<span class="gu">* Mon Jan 28 2013 Michal Srb &lt;msrb@redhat.com&gt; - 3.1.2-9</span>
- Build with xmvn
</pre></div>
</td></tr></table>

<h2>Comparison of manual and automatic requires</h2>
<h3>Manual requires</h3>
<p>guice-servlet requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
<li>tomcat-servlet-3.0-api<br />
</li>
</ul>
<p>guice-jmx requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-extensions requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-parent requires:</p>
<ul>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-throwingproviders requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
</ul>
<p>google-guice requires:</p>
<ul>
<li>aopalliance<br />
</li>
<li>atinject<br />
</li>
<li>cglib<br />
</li>
<li>guava<br />
</li>
<li>guice-parent = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
<li>slf4j<br />
</li>
</ul>
<p>guice-jndi requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-grapher requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>guice-assistedinject = 3.1.2-8.fc19</li>
<li>guice-multibindings = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-persist requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>hibernate-jpa-2.0-api<br />
</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
<li>tomcat-servlet-3.0-api<br />
</li>
</ul>
<p>guice-multibindings requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
</ul>
<p>google-guice-javadoc requires:</p>
<ul>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-assistedinject requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-spring requires:</p>
<ul>
<li>guice = 3.1.2-8.fc19</li>
<li>java<br />
</li>
<li>jpackage-utils<br />
</li>
<li>springframework-beans<br />
</li>
</ul>
<h3>Automatic requires</h3>
<p>guice-servlet requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(javax.servlet:servlet-api)<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>guice-jmx requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>guice-extensions requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.apache.felix:maven-bundle-plugin)<br />
</li>
<li>mvn(org.apache.maven.plugins:maven-remote-resources-plugin)<br />
</li>
<li>mvn(org.sonatype.sisu.inject:guice-parent)<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>guice-parent requires:</p>
<ul>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.forge:forge-parent)<br />
</li>
</ul>
<p>guice-throwingproviders requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>google-guice requires:</p>
<ul>
<li>guice-parent = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(aopalliance:aopalliance)<br />
</li>
<li>mvn(cglib:cglib)<br />
</li>
<li>mvn(com.google.guava:guava)<br />
</li>
<li>mvn(javax.inject:javax.inject)<br />
</li>
<li>mvn(org.slf4j:slf4j-api)<br />
</li>
</ul>
<p>guice-jndi requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>guice-grapher requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>guice-assistedinject = 3.1.2-9.fc19</li>
<li>guice-multibindings = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.sisu.inject:guice-assistedinject)<br />
</li>
<li>mvn(org.sonatype.sisu.inject:guice-multibindings)<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>guice-persist requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(javax.persistence:persistence-api)<br />
</li>
<li>mvn(javax.servlet:servlet-api)<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>guice-multibindings requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java<br />
</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>google-guice-javadoc requires:</p>
<ul>
<li>jpackage-utils<br />
</li>
</ul>
<p>guice-assistedinject requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java<br />
</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
</ul>
<p>guice-spring requires:</p>
<ul>
<li>guice = 3.1.2-9.fc19</li>
<li>java &gt;= 1.5</li>
<li>jpackage-utils<br />
</li>
<li>mvn(org.sonatype.sisu:sisu-guice)<br />
</li>
<li>mvn(org.springframework:spring-beans)<br />
</li>
</ul>
<h2>Notable spec file differences</h2>
<ul>
<li>compatibility symlinks: Symlinks to JAR files were
traditionally created manually in <code>%install</code> section and then listed
in <code>%files</code> section. With XMvn packages can create symlinks using
<code>%mvn_file</code> macro call. The first argument specifies artifact(s) for
which symlinks are to be created, second argument specifies main
artifact file name, third (fourth, fifth, and so on) argument
specifies symlink to be created.</li>
<li>artifact aliases: Before XMvn artifact aliases used to be
generated using <code>%add_to_maven_depmap</code> macro or <code>%add_maven_depmap</code>
with argument <code>-a</code>. With XMvn aliases are generated using <code>%mvn_alias</code>
macro, which is defined and documented in <code>/etc/rpm/macros.xmvn</code>
file.</li>
<li>singleton packaging: <code>%mvn_build</code> with option <code>-s</code>
will generate separate .mfiles for every artifact. With this feature,
it is easy to automatically create separate package for every
artifact.</li>
</ul>
