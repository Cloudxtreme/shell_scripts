<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<meta name="author" content="Jan-Piet Mens" />
        <meta name="ICBM" content="52.0341, 8.4772" />
	<link rel="apple-touch-icon" href="/inc/apple-touch-icon.png" />
        <meta name="geo.position" content="52.0341;8.4772" />
        <link rel="pavatar" href="http://jpmens.net/inc/pavatar.png" />
        <meta name="DC.title" content="Jan-Piet Mens" />    
	<meta name="twitter:card" content="summary" />
	<meta name="twitter:site" content="@jpmens" />
	<meta name="keywords" content="jpmens,jan-piet mens,jpm" /> 
	<link rel="icon" href="/favicon.ico" type="image/x-icon" /> 
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" /> 
	<meta name="google-site-verification" content="eOAtwQVe63Q3l-kJrBJQR8fsP_AqstRj-9lw3kx92tM" />
	<link rel="alternate" type="application/atom+xml" title="Atom all posts" href="/atom.xml" />

	<link rel="stylesheet" href="/css/style.css" type="text/css"/>
	<link rel="stylesheet" href="/css/syntax.css" type="text/css"/>
	<script type="text/javascript" src="/inc/jquery-min.js"></script>
	<script type="text/javascript" src="/inc/jpmens.js"></script>
	<script type="text/javascript" src="/inc/dnssecmagic.js"></script>

	
		<title>Jan-Piet Mens :: Checking Current Application or Data Versions Using DNS</title>
		<meta name="twitter:url" content="http://jpmens.net/pages/checking-current-application-or-data-versions-using-dns/" />
		<meta name="twitter:title" content="Checking Current Application or Data Versions Using DNS" />
		<meta name="twitter:description" 
			
			  content="More often than not, an application has dependecies to a backend: whether it
is a frontend to a relational database system on which the schema might
change, or be it a program that retrieves data f..."
			
			/>
	

</head>
<body>
        <div id="header">
            <div class="inner">
		<div class='mygrep'>
                <ul>
			<li><span id='dnssecmagic'></span></li>
			<li><span id='ipmagic'></span></li>
			<li><a href="/atom.xml" ><img src="/inc/feed.png" width="16" height="16" alt="Atom" /></a></li>
                    <li>
                          <a title="grep" href='#' class='greplink'>Search</a>
                          <div class='form'>
                            <form id='qform' action="http://www.google.com/cse" method="get">
                              <input type="hidden" name="cx" value="018110282457752677189:f9v9jgssdag" />
                              <input type="hidden" name="ie" value="UTF-8" />
                              <input id='grepfield' type="text" name="q" size="6" />
                              <input type="hidden" name="sa" value="Search" />
                            </form>
                          </div>
                    </li>
                    <li><a title="more" href="/pages/index.html">Pages</a></li>
                    <li><a title="ls -l" href="/archive/">Archives</a></li>
		    <li><a title="Twitter" href="https://twitter.com/jpmens">@jpmens</a></li>
                    <li>
		         <a href="https://plus.google.com/107349548255760539356?rel=author">+</a>
		    	<a title="whoami" href="/pages/about/">About</a></li>
                </ul>
		</div>
                <h1><a href="/">Jan-Piet Mens</a></h1>
            </div>
        </div>





        <div id="content">  
	    <div id='searchres' class="inner">
		<div class="post" id="551">
		    <div class="title"><h1><a href="/pages/checking-current-application-or-data-versions-using-dns/">Checking Current Application or Data Versions Using DNS</a></h1></div>
		    <p>More often than not, an application has dependecies to a backend: whether it
is a frontend to a relational database system on which the schema might
change, or be it a program that retrieves data from an LDAP directory server
on which object classes may be modified, it is important to keep the frontend
of the "fat client" in sync with the backend. A ubiquitious way of doing that
is to compare some sort of version or release number to ensure that the
frontend and the backend are compatible.</p>

<p>Several methods can be used to ensure release correlation between the front and
backends; an HTTP GET request to a CGI script might retrieve version
information which is then compared, a <code>SELECT current_version FROM table</code> can
do similar on a relational database backend, or even a setting in a
configuration store on the client machine, such as the registry on Windows
clients and servers.</p>

<p>A method which is seldom used is DNS. The <a href="http://en.wikipedia.org/wiki/Domain_name_system">Domain Name System</a> is a huge
distributed database (arguably the World's largest distributed information
database), which is generally used for translating hostnames such as
www.fupps.com to their current TCP/IP address such as 10.254.138.203. The DNS
orders the information it holds in so-called resource records (RR) of which
there are many types: the <em>A</em> resource record holds an IP address, the <em>MX</em> RR
stores a mail-exchanger name with its priority, the <em>NS</em> RR documents which
Name Server(s) are authoritative for a domain, etc. One seldom used resource
record is the <em>TXT</em> RR, which can hold an arbitrary string of up to 65535
octets.</p>

<p>In standard BIND notation, a DNS file (called a zone) for these four types of
records looks like this:</p>

<div class="highlight"><pre><code class="text">$ORIGIN fupps.com.
.               IN NS  ns.fupps.com.
www             IN A   10.254.138.203
mail            IN MX  10 mail.fupps.com.
vers            IN TXT &quot;Hello World&quot;
</code></pre>
</div>


<p>Note how each line is formatted according to the type of information the
resource record is allow to contain, and notes once again, that the <em>TXT</em> RR
may contain an arbitrary string. To read up on DNS, I reccomend the <a href="http://en.wikipedia.org/wiki/Domain_name_system">WikiPedia
article</a> and for a good online guide to the working of the BIND (the
Berkeley Internet Name Daemon) <a href="http://www.zytrax.com/books/dns/">DNS for Rocket Scientists</a>. One of the best
books is <a href="/2006/07/06/pro-dns-and-bind/">Pro DNS and BIND</a>.</p>

<p>The resource record I am interested in is the <em>TXT</em> RR. If I query this
resource record with a tool able to retrieve different types of RR (<em>ping</em> is
not a suitable utility for doing this) I would get something like this
displayed:</p>

<div class="highlight"><pre><code class="text">$ host -t txt vers.fupps.com
vers.fupps.com text &quot;Hello World&quot;

$ dig vers.fupps.com txt
;; QUESTION SECTION:
;vers.fupps.com. IN    TXT

;; ANSWER SECTION:
vers.fupps.com. 60 IN  TXT     &quot;Hello World&quot;
    
</code></pre>
</div>


<p>How about using such a resource record to distribute the current application
version? This technique will work over the Internet accross continents and
within organizations that maintain their own Domain Name System servers. A
query to the DNS is a very lightweight operation (a single UDP datagram will
often suffice in returning the desired data) and it is cached by intermediary
name servers (as long as the time to live (TTL) of the resource record hasn't
expired) which reduces the load on the origin DNS server. A <em>TXT</em> RR is a good
place to store our information, even though there are <a href="http://www.ops.ietf.org/lists/namedroppers/namedroppers.199x/msg04043.html">valid reasons against
doing so</a>.</p>

<p>The DNS administrator of your domain (be it on an internal corporate network or
on the Internet) will have to update the record for you, unless she or he
allows you to perform <a href="/2006/02/12/poor-mans-dynamic-dns/">dynamic DNS updates</a>.</p>

<p>Choose a hostname for the <em>TXT</em> RR which will uniquely identify your
application. Since hostnames can be quite long (254 characters), and since
nobody will have to type in this hostname, you can allocate almost anything.
There is no danger in having names clash in the future either. By that I mean,
suppose you wanted a <em>TXT</em> record called <em>supercool.fupps.com</em> and later you
need a host with the same name, the DNS administrator would later simply add an
<em>A</em> RR to <em>supercool.fupps.com</em> with the address of the host.</p>

<p>To avoid <em>TXT</em> RR other than those that contain our release/version information
from "polluting" us, I have decided to have the resource record contain the
string <code>version_</code> in its value. This will allow constructs such as the
following:</p>

<div class="highlight"><pre><code class="text">    $ORIGIN fupps.com.
    .               IN NS   ns.fupps.com.
    www             IN A    10.254.138.203
    mail            IN MX   10 mail.fupps.com.
    vers            IN TXT  &quot;Hello World&quot;
    vers            IN TXT  &quot;maintainer is JP&quot;
    vers            IN TXT  &quot;version 1.8&quot;
    
</code></pre>
</div>


<p>Note how there are three <em>TXT</em> RR for the domain name <em>vers.fupps.com</em>. Oh,
and do note, that the Domain Name System is designed to return the three
values in arbitrary, usually <a href="http://en.wikipedia.org/wiki/Round_robin_DNS">round-robin</a> type, order to the program that
issues a query for the resource record. For this reason, and to allow entries
that don't specify a release number for our software, I've used the notation
on the last line in the example above; the program will simply remove the
<code>"version_"</code> from the string before interpreting it.</p>

<p>Here is a small C function which has been tested on Windows XP, Windows 2003,
as well as several flavors of Linux and Unix of course. Compilation
instructions are located at the top of the program for both Linux/Unix and
Windows. The latter was compiled with Microsoft Visual C++ 6.0 and the
Microsoft Platform SDK.</p>

<div class="highlight"><pre><code class="c">    <span class="cm">/*</span>
<span class="cm">     * dns-version-txt.c (C)2006 by Jan-Piet Mens &lt;jpmens at gmail.com&gt;</span>
<span class="cm">     * The function getversionfromdns() returns a version string contained</span>
<span class="cm">     * in a TXT RR. </span>
<span class="cm">     * This function works on Win32 as well as Unix/Linux, whereby it</span>
<span class="cm">     * requires the resolve.[ch] stubs which are (C)Kungliga Tekniska Hygkolan,</span>
<span class="cm">     * Sweden.</span>
<span class="cm">     *</span>
<span class="cm">     * To compile on Linux/Unix:</span>
<span class="cm">     *</span>
<span class="cm">     *  gcc -DUNIX=1 -o dns dns-version-txt.c resolve.c -lresolv</span>
<span class="cm">     *</span>
<span class="cm">     * To compile on Windows with MS Platform SDK:</span>
<span class="cm">     *</span>
<span class="cm">     *  cl -nologo -DWIN32=1 -o dns.exe dns-version-txt.c dnsapi.lib wsock32.lib</span>
<span class="cm">     *</span>
<span class="cm">     */</span>
    
    <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">stdio</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
    <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">stdlib</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
    <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">string</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
    <span class="err">#</span><span class="n">ifdef</span> <span class="n">WIN32</span>
    <span class="err">#</span> <span class="n">include</span> <span class="o">&lt;</span><span class="n">windows</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
    <span class="err">#</span> <span class="n">include</span> <span class="o">&lt;</span><span class="n">winerror</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
    <span class="err">#</span> <span class="n">include</span> <span class="o">&lt;</span><span class="n">windns</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
    <span class="err">#</span><span class="k">else</span>
    <span class="err">#</span> <span class="n">include</span> <span class="o">&lt;</span><span class="n">stdio</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
    <span class="err">#</span> <span class="n">include</span> <span class="s">&quot;resolve.h&quot;</span>
    <span class="err">#</span><span class="n">endif</span>
    
    <span class="err">#</span><span class="n">define</span> <span class="n">DNSVNAME</span>    <span class="s">&quot;fuppsver.example.com&quot;</span>
    <span class="err">#</span><span class="n">define</span> <span class="n">RRprefix</span>    <span class="s">&quot;version &quot;</span>    <span class="cm">/* The string before the release/version</span>
<span class="cm">                       * number in the TXT RR. If this is set</span>
<span class="cm">                       * to &quot;version-&quot;, the TXT RR must contain</span>
<span class="cm">                       * &quot;version-1.8&quot;</span>
<span class="cm">                       */</span>
    
    <span class="cm">/*</span>
<span class="cm">     * int getversionfromdns(char **versionstring)</span>
<span class="cm">     *   retrieve the version information from a TXT RR from DNS</span>
<span class="cm">     *   for the domain DNSVNAME. If version information cannot</span>
<span class="cm">     *   be retrieved, a non-zero value is returned. Otherwise,</span>
<span class="cm">     *   the pointer at `versionstring&#39; contains the version</span>
<span class="cm">     *   string sans the prefix RRprefix. This pointer is overwritten</span>
<span class="cm">     *   at each invocation and must be freed by the caller.</span>
<span class="cm">     */</span>
    
    <span class="err">#</span><span class="n">ifdef</span> <span class="n">WIN32</span>
    <span class="kt">int</span> <span class="n">getversionfromdns</span><span class="p">(</span><span class="kt">char</span> <span class="o">**</span><span class="n">versionstring</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">PDNS_RECORD</span> <span class="n">qr</span><span class="p">,</span> <span class="n">rp</span><span class="p">;</span>
        <span class="n">DWORD</span> <span class="n">rc</span><span class="p">;</span>
    
        <span class="n">rc</span> <span class="o">=</span> <span class="n">DnsQuery</span><span class="p">(</span><span class="n">DNSVNAME</span><span class="p">,</span> <span class="n">DNS_TYPE_TEXT</span><span class="p">,</span> <span class="n">DNS_QUERY_STANDARD</span><span class="p">,</span>
            <span class="nb">NULL</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">qr</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">rc</span> <span class="o">!=</span> <span class="n">ERROR_SUCCESS</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
        <span class="p">}</span>
    
        <span class="o">*</span><span class="n">versionstring</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    
        <span class="k">for</span> <span class="p">(</span><span class="n">rp</span> <span class="o">=</span> <span class="n">qr</span><span class="p">;</span> <span class="n">rp</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="n">rp</span> <span class="o">=</span> <span class="n">rp</span><span class="o">-&gt;</span><span class="n">pNext</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span> <span class="n">rp</span><span class="o">-&gt;</span><span class="n">wType</span> <span class="o">==</span> <span class="n">DNS_TYPE_TEXT</span> <span class="p">)</span> <span class="p">{</span>
                <span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
    
                <span class="k">for</span> <span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="n">rp</span><span class="o">-&gt;</span><span class="n">Data</span><span class="p">.</span><span class="n">Txt</span><span class="p">.</span><span class="n">dwStringCount</span><span class="p">;</span> <span class="n">n</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strncmp</span><span class="p">(</span><span class="n">rp</span><span class="o">-&gt;</span><span class="n">Data</span><span class="p">.</span><span class="n">Txt</span><span class="p">.</span><span class="n">pStringArray</span><span class="p">[</span><span class="n">n</span><span class="p">],</span> <span class="n">RRprefix</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">RRprefix</span><span class="p">)))</span> <span class="p">{</span>
                        <span class="o">*</span><span class="n">versionstring</span> <span class="o">=</span> <span class="n">strdup</span><span class="p">(</span><span class="n">rp</span><span class="o">-&gt;</span><span class="n">Data</span><span class="p">.</span><span class="n">Txt</span><span class="p">.</span><span class="n">pStringArray</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">RRprefix</span><span class="p">));</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    
        <span class="n">DnsRecordListFree</span><span class="p">(</span><span class="n">qr</span><span class="p">,</span> <span class="n">DnsFreeRecordList</span> <span class="p">);</span>
    
        <span class="k">return</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>
    
    <span class="err">#</span><span class="k">else</span> <span class="cm">/* Unix */</span>
    
    <span class="err">#</span><span class="n">define</span> <span class="n">TXT_RR</span>    <span class="mi">16</span>
    
    <span class="kt">int</span> <span class="n">getversionfromdns</span><span class="p">(</span><span class="kt">char</span> <span class="o">**</span><span class="n">versionstring</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">struct</span> <span class="n">dns_reply</span> <span class="o">*</span><span class="n">r</span><span class="p">;</span>
        <span class="k">struct</span> <span class="n">resource_record</span> <span class="o">*</span><span class="n">rr</span><span class="p">;</span>
    
        <span class="k">if</span> <span class="p">((</span><span class="n">r</span> <span class="o">=</span> <span class="n">dns_lookup</span> <span class="p">(</span><span class="n">DNSVNAME</span><span class="p">,</span> <span class="s">&quot;TXT&quot;</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
        <span class="p">}</span>
    
        <span class="k">for</span> <span class="p">(</span><span class="n">rr</span> <span class="o">=</span> <span class="n">r</span><span class="o">-&gt;</span><span class="n">head</span><span class="p">;</span> <span class="n">rr</span><span class="p">;</span> <span class="n">rr</span> <span class="o">=</span> <span class="n">rr</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">rr</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">==</span> <span class="n">TXT_RR</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strncmp</span><span class="p">(</span><span class="n">rr</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">txt</span><span class="p">,</span> <span class="n">RRprefix</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">RRprefix</span><span class="p">)))</span> <span class="p">{</span>
                    <span class="o">*</span><span class="n">versionstring</span> <span class="o">=</span> <span class="n">strdup</span><span class="p">(</span><span class="n">rr</span><span class="o">-&gt;</span><span class="n">u</span><span class="p">.</span><span class="n">txt</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">RRprefix</span><span class="p">));</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    
        <span class="n">dns_free_data</span><span class="p">(</span><span class="n">r</span><span class="p">);</span>
        <span class="k">return</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>
    
    <span class="err">#</span><span class="n">endif</span>
    
    <span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="kt">char</span> <span class="o">*</span><span class="n">version</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
        
        <span class="n">rc</span> <span class="o">=</span> <span class="n">getversionfromdns</span><span class="p">(</span><span class="o">&amp;</span><span class="n">version</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">rc</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Version returned from DNS: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">version</span><span class="p">);</span>
            <span class="n">free</span><span class="p">(</span><span class="n">version</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>
    
</code></pre>
</div>


<p>The Unix/Linux version of the code utilitzes the resolver stubs
<code>resolve.c</code> and <code>resolve.h</code>, which are <em>Copyright (c) 1995, 1996, 1997
Kungliga Tekniska Hvgskolan (Royal Institute of Technology, Stockholm,
Sweden)</em>.</p>

<p>What should the program do if the release/version information
returned from the DNS doesn't match what is expected? Well, that very strongly
depends on whether the application can continue to work or not. Some
programmers might prefer to have the program abort with a diagnostic message
and force the user to install a newer version. Others might be able to perform
a remote software installation for the new program version. Yet again others,
might decide to let the program continue, but instruct the "backend" to use a
previous data version. There are innumerable scenarios, and I can only hint at
some of the probable ones.</p>

<p>The only package I know of to use a similar technology is the excellent
<a href="http://www.clamav.net/">ClamAV</a> scanning toolkit for Linux/Unix; its <em>freshclam</em> tool checks the
value of a <em>TXT RR</em> to determine whether new signatures are available. The
<em>TXT</em> resource record also contains a timestamp.</p>

<div class="highlight"><pre><code class="text">    $ host -t txt current.cvd.clamav.net
    current.cvd.clamav.net text &quot;0.88.4:40:1891:1158557342:1&quot;
    
</code></pre>
</div>


<h3>Resources</h3>

<ul>
<li><a href="http://www.isc.org/index.pl?/sw/bind/">ISC BIND</a></li>
<li><a href="http://www.zytrax.com/books/dns/">DNS for Rocket Scientists</a></li>
<li><a href="/2006/07/06/pro-dns-and-bind/">Pro DNS and BIND</a></li>
</ul>



	
		

			<div class="info">
<a href="/pages/checking-current-application-or-data-versions-using-dns/" title="Link to this article">18 Sep 2006</a> :: <a title="e-mail link to this article" href="mailto:?X-site=jpmens.net&amp;subject=Checking Current Application or Data Versions Using DNS&amp;body=You%20might%20like%20this:%20http://jpmens.net/pages/checking-current-application-or-data-versions-using-dns/">e-mail</a>
</div><!-- info -->

			<div id='comments'>
  <h3>Comments</h3>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'jpmens-net';

    // The following are highly recommended additional parameters. Remove the slashes in front to use.
    // var disqus_identifier = 'unique_dynamic_id_1234';
    var disqus_url = 'http://jpmens.net/pages/checking-current-application-or-data-versions-using-dns/';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>

</div>


	
		</div><!-- post -->
	    </div><!-- inner -->
        </div><!-- content -->



 <div id="tail">
 </div>

<!-- Piwik --> 
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://jpmens.net/pi/piwik/" : "http://jpmens.net/pi/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 1);
piwikTracker.trackPageView();
piwikTracker.enableLinkTracking();
} catch( err ) {}
</script><noscript><p><img src="http://jpmens.net/pi/piwik/piwik.php?idsite=1" style="border:0" alt="" /></p></noscript>
<!-- End Piwik Tracking Code -->

        <!-- Place this image somewhere at the bottom of your page -->
        <span><img
                src="http://www.dnssec-failed.org/1x1.gif"
                width="1"
                height="1"
                id="dnssecmagicpixel"
                onload="dnssecmagicpixelLoaded();" /></span>

 </body>
</html>

