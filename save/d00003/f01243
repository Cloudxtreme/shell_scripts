<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
                 <link rel="shortcut icon" href="/tnf/resource/favicon.ico" type="image/x-icon"> 
		<title>
			NetBSD Blog
		</title>
                <link rel="stylesheet" type="text/css" href='/tnf/resource/global.css' />
		<link rel="stylesheet" type="text/css" href='/tnf/page/custom.css' />
	</head>
	<body>
		
			        
            <link rel="alternate" type="application/atom+xml" title="Recent Entries (Atom)"  href="http://blog.netbsd.org/tnf/feed/entries/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Entries (RSS)"   href="http://blog.netbsd.org/tnf/feed/entries/rss" />
    <link rel="alternate" type="application/atom+xml" title="Recent Comments (Atom)" href="http://blog.netbsd.org/tnf/feed/comments/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Comments (RSS)"  href="http://blog.netbsd.org/tnf/feed/comments/rss" />

    
                <link rel="search"
            title="OpenSearch Descriptor for weblog NetBSD Blog"
            type="application/opensearchdescription+xml"
            href="http://blog.netbsd.org/roller-services/opensearch/tnf" />
    		
		<div id="header">
			<div class="topNavigation">
				<span>&raquo;</span> <a href="http://www.NetBSD.org/docs/guide/en/">The Guide</a> | <a href="http://man.NetBSD.org">Manual pages</a> | <a href="http://www.NetBSD.org/mailinglists/">Mailing lists</a> and <a href="http://mail-index.NetBSD.org/">Archives</a> | <a href="http://cvsweb.NetBSD.org/">CVS repository</a> | <a href="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">Report</a> or <a href="http://gnats.NetBSD.org/">query</a> a bug | <a href="http://www.NetBSD.org/docs/software/packages.html">Software Packages</a>
			</div>
			<div class="centralHeader">
				<a href="/"><img src="/tnf/resource/NetBSD-headerlogo.png" alt="[NetBSD Logo]" width="506" height="90" /></a>
				<div class="headerTools">
<BR>
					<div id="headerSearch">
						<form method="get" action="/tnf/search">
							<input class="whiteOnBlack" type="text" name="q" onfocus="if(this.value==this.defaultValue ) this.value='';" size="12" maxlength="255" value="Search" /> <input type="submit" value="Search" />
						</form>
					</div>
				</div>
			</div>
			<div class="navBar">
				<a href="http://blog.netbsd.org/tnf/" title="Home">Home</a>&nbsp;|&nbsp;
                                <img src="/tnf/resource/feed-icon-14x14.png" border=0 align="absmiddle"><a href="http://blog.netbsd.org/tnf/feed/entries/atom">RSS</a>&nbsp;|&nbsp;
 <a href="http://blog.netbsd.org/tnf/category/General" title="General">General</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Release+engineering" title="Blog about NetBSD release engineering.">Release engineering</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Networking" title="">Networking</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Development" title="About NetBSD development.">Development</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Events" title="Upcoming and past events.">Events</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/The+NetBSD+Foundation" title="TNF articles.">The NetBSD Foundation</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Packages" title="The most portable package software in the world.">Packages</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Security" title="Security advisories and security related information.">Security</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Ports" title="Port specific news">Ports</a>&nbsp;|&nbsp; 
      <a href="/roller-ui/login-redirect.rol"><span>Login</span></a>
  			</div>
		</div>
		<div id="content">
			<div class="rowOfBoxes">
				<div class="quarter noBorderOnLeft borderOnRight sideBarLeft">

                                                <h3>Bookmarks</h3>
                                                                                                <ul class="rFolder">
                    <li class="rFolderItem">
                                <a href="http://www.NetBSD.org/"
               title="NetBSD is a free, secure, and highly portable Unix-like Open Source operating system available for many platforms, from large-scale server systems to powerful desktop systems to handheld and embedded devices."
               class="rBookmark0">The NetBSD Project</a>
                </li>
            <li class="rFolderItem">
                                <a href="http://wiki.netbsd.org/"
               title="The NetBSD Wiki is a collaborative writing project to build useful resources for NetBSD users."
               class="rBookmark0">NetBSD Wiki</a>
                </li>
                    </ul>
	
						<h3>Feeds</h3>
						    <ul class="rFeeds">
    <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom">All</a></li>
                <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FGeneral">/General</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FRelease+engineering">/Release engineering</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FNetworking">/Networking</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FDevelopment">/Development</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FEvents">/Events</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FThe+NetBSD+Foundation">/The NetBSD Foundation</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPackages">/Packages</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FSecurity">/Security</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPorts">/Ports</a></li>
        <li><a href="http://blog.netbsd.org/tnf/feed/comments/atom">Comments</a></li>
    </ul>

			</div>
			</div>
			<div class="mainContent">
				<div class="half noBorderOnLeft" style="border-left: 1px dotted #000">
							  		              <h2><a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host">Kernel Modules Autoload from Host in Rump</a></h2><BR>
<div class="descr">April 27, 2010 posted by <i>Antti Kantee</I></div><BR>

  <p>
Since early 2009 NetBSD and <a href="http://www.NetBSD.org/docs/rump/">rump</a> has supported execution of stock kernel
module binaries in userspace on x86 architectures.  Starting in -current as of today, kernel modules will automatically
be loaded from the host into the rump kernel.  For example, when mounting a file system in a rump
kernel, support will be automatically loaded before mounting is attempted.
</p>

<p>
The first issue with autoloading host kernel modules in rump was kernel symbol renaming: to prevent collisions
between the application and kernel C symbols, the rump build uses <i>objcopy</i> to prefix symbols with the string
<tt>rumpns</tt>.  While running objcopy on a prebuilt kernel module was possible without access to the module's source code,
it was a manual step necessary to get a standard kernel module loaded.  This was solved by adding a hook
to the module loader to adjust the module's string table after it is loaded but before it is linked.
</p>

<p>
The second issue was that kernel modules had to be loaded manually by calling <tt>rump_sys_modctl()</tt>; in contrast
kernel modules are commonly autoloaded when necessary.  While the standard kernel routines included in a rump kernel
would attempt to autoload the module, they would fail because the module files were not available within the rump file
system namespace.  With some improvements to the rump host file system, etfs, it is now possible to map the kernel
module directory (e.g. <i>/stand/i386/5.99.27/modules</i>) inside the rump kernel.
</p>

<p>
Autoloading kernel modules from the host demonstrates a key feature and difference of rump-style lightweight service virtualization: only one full host
installation is necessary (although the coexistence of multiple different rump kernel versions is of course possible).
This should be contrasted with traditional heavyweight approaches to building virtual services, where each virtual service
requires an entire OS installation and maintenance.
</p>

   [<a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host#comments">3 comments</a>]
 
</p>

<p>
<script type="text/javascript">
digg_url = 'http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host';
digg_title = 'Kernel Modules Autoload from Host in Rump';
digg_skin = 'compact';
digg_window = 'new';
</script>
<script src="http://digg.com/tools/diggthis.js" type="text/javascript"></script>

<!--
<img src="http://images.slashdot.org/favicon.ico" alt="Slashdot" border="0" height="16" width="16">
<a href="javascript:location.href='http://slashdot.org/slashdot-it.pl?op=basic&amp;url='+encodeURIComponent(http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host)">Slashdot It!</a>
-->
</p>

<p>&nbsp;</p>

    		  <div class="next-prev">
		  		                                 &laquo; <a href="http://blog.netbsd.org/tnf/entry/the_pkgsrc_2010q1_release">The pkgsrc-2010Q1...</a> |  
                <a href="/tnf/">Main</a>
                | <a href="http://blog.netbsd.org/tnf/entry/six_netbsd_projects_choosen_for">Six NetBSD projects...</a> &raquo;
    		  		  </div>
		  		     <br/><br/>
		     		         <a name="comments"></a>
    <div class="comments" id="comments">

            <div class="comments-head">Comments:</div>
            
    <br/>
                        <a name="comment-1272358955000" id="comment-1272358955000"></a>
            <div class="comment odd" id="comment1">

                Hats off Antti, you deserve it.

I was wondering what kind of &quot;dependency&quot; would be required to port RUMP to OSs with limited APIs, (including, but not limited to, L4-like microkernels), both in terms of requirements and work.

I am well aware of Arnaud Ysmal work that applies to FreeBSD and GNU/Linux environments, but this is kind of different: the API is less rich, and may lack features you would expect in present general purpose OS.

The approach taken today by some vendors to enrich the environment sitting above their microkernel is to port a full-fletched general purpose OS and paravirtualize it through their hypercall-like API, which provides routines similar to low level hardware routines. Such a port requires a lot of work, especially if your only interested in a small part of the OS, like specific fs code, or network/usb/pci stacks.

Help, and/or pointers, would be very appreciated.

Nonetheless, kuddos for your work Antti, it is darn impressive.

                <p class="comment-details">
                Posted by
                                    <b>jean-Yves Migeon</b>
                
                on April 27, 2010 at 09:02 AM UTC

                <a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host#comment-1272358955000"
                   class="entrypermalink" title="comment permalink">#</a>
                </p>

            </div>

                                <a name="comment-1272386059000" id="comment-1272386059000"></a>
            <div class="comment even" id="comment2">

                This might be a discussion better suited for a mailing list (apparently there's a 1000 char size limit), but I'll answer &quot;shortly&quot; here and we can do any potential further discussion on a list.

First, I'd like to point out there are multiple facets to portability:
1) host NetBSD kernel servers on non-NetBSD 2) use non-NetBSD clients against NetBSD servers 3) create rump-like servers from non-NetBSD operating systems.  I'm assuming you're talking about &quot;1&quot;.

Now, the portability for that case is defined in terms of the rump hypercall interface, which is known as rumpuser (librumpuser / rumpuser.h).  The current interface and implementation are clearly geared toward hosting on POSIX-y type systems such as *BSD and Linux -- especially in the sense that rump tries to reuse everything it can from the host, e.g. locking and scheduling.  If you want to run things directly on top of a very barebones microkernel interface, you'll need to fill in a number of missing pieces ... (cont)

                <p class="comment-details">
                Posted by
                                    <b>Antti Kantee</b>
                
                on April 27, 2010 at 04:34 PM UTC

                <a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host#comment-1272386059000"
                   class="entrypermalink" title="comment permalink">#</a>
                </p>

            </div>

                                <a name="comment-1272386177000" id="comment-1272386177000"></a>
            <div class="comment odd" id="comment3">

                (cont)
For minimum work, I'd say you'd want start with running on top of a more POSIX-like server on your microkernel or include deepers layers of the driver stack from NetBSD.  The bottom line is still always  the same: you need a way to access the hardware resource -- the storage backend  for file systems, the wire for the network stack and the hardware for a device driver, etc.  Also, you need other necessary software bits such as a way to allocate memory from the host.

As for the common practice of porting an entire OS for some driver stack, well,
part of the idea with rump was to show that a monolithic style OS splits easily
into components which can be run independently.  At any rate, hosting only the components you need will not be be harder than hosting an entire OS.  The other benefit from componentization, which gets more interesting once you get more embedded, is that you're using a whole deal less of hardware resources for your drivers.

                <p class="comment-details">
                Posted by
                                    <b>Antti Kantee</b>
                
                on April 27, 2010 at 04:36 PM UTC

                <a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host#comment-1272386177000"
                   class="entrypermalink" title="comment permalink">#</a>
                </p>

            </div>

                </div>
		     		     
    <div class="comments-form">
    <div class="comments-head">Post a Comment:</div>
    <a name="comment-form"></a>

    <span class="status">Comments are closed for this entry.</span>

    </div>
		  				</div>
			</div>
			<div class="clearer"></div>
		</div>
		<div class="rowOfBoxes">
			<div id="footer">
				<span class="footfeed"><a href="http://www.NetBSD.org/cgi-bin/feedback.cgi">Contact</a> |</span> <span class="footcopy"><a href="http://www.NetBSD.org/about/disclaimer.html">Disclaimer</a> | <span class="copyright">Copyright © 1994-2009 The NetBSD Foundation, Inc.</span> ALL RIGHTS RESERVED.<br />
				NetBSD<sup>®</sup> is a registered trademark of The NetBSD Foundation, Inc.</span>
			</div>
		</div>
	</body>
</html>

