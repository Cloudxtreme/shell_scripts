<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
                 <link rel="shortcut icon" href="/tnf/resource/favicon.ico" type="image/x-icon"> 
		<title>
			NetBSD Blog
		</title>
                <link rel="stylesheet" type="text/css" href='/tnf/resource/global.css' />
		<link rel="stylesheet" type="text/css" href='/tnf/page/custom.css' />
	</head>
	<body>
		
			        
            <link rel="alternate" type="application/atom+xml" title="Recent Entries (Atom)"  href="http://blog.netbsd.org/tnf/feed/entries/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Entries (RSS)"   href="http://blog.netbsd.org/tnf/feed/entries/rss" />
    <link rel="alternate" type="application/atom+xml" title="Recent Comments (Atom)" href="http://blog.netbsd.org/tnf/feed/comments/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Comments (RSS)"  href="http://blog.netbsd.org/tnf/feed/comments/rss" />

    
                <link rel="search"
            title="OpenSearch Descriptor for weblog NetBSD Blog"
            type="application/opensearchdescription+xml"
            href="http://blog.netbsd.org/roller-services/opensearch/tnf" />
    		
		<div id="header">
			<div class="topNavigation">
				<span>&raquo;</span> <a href="http://www.NetBSD.org/docs/guide/en/">The Guide</a> | <a href="http://man.NetBSD.org">Manual pages</a> | <a href="http://www.NetBSD.org/mailinglists/">Mailing lists</a> and <a href="http://mail-index.NetBSD.org/">Archives</a> | <a href="http://cvsweb.NetBSD.org/">CVS repository</a> | <a href="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">Report</a> or <a href="http://gnats.NetBSD.org/">query</a> a bug | <a href="http://www.NetBSD.org/docs/software/packages.html">Software Packages</a>
			</div>
			<div class="centralHeader">
				<a href="/"><img src="/tnf/resource/NetBSD-headerlogo.png" alt="[NetBSD Logo]" width="506" height="90" /></a>
				<div class="headerTools">
<BR>
					<div id="headerSearch">
						<form method="get" action="/tnf/search">
							<input class="whiteOnBlack" type="text" name="q" onfocus="if(this.value==this.defaultValue ) this.value='';" size="12" maxlength="255" value="Search" /> <input type="submit" value="Search" />
						</form>
					</div>
				</div>
			</div>
			<div class="navBar">
				<a href="http://blog.netbsd.org/tnf/" title="Home">Home</a>&nbsp;|&nbsp;
                                <img src="/tnf/resource/feed-icon-14x14.png" border=0 align="absmiddle"><a href="http://blog.netbsd.org/tnf/feed/entries/atom">RSS</a>&nbsp;|&nbsp;
 <a href="http://blog.netbsd.org/tnf/category/General" title="General">General</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Release+engineering" title="Blog about NetBSD release engineering.">Release engineering</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Networking" title="">Networking</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Development" title="About NetBSD development.">Development</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Events" title="Upcoming and past events.">Events</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/The+NetBSD+Foundation" title="TNF articles.">The NetBSD Foundation</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Packages" title="The most portable package software in the world.">Packages</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Security" title="Security advisories and security related information.">Security</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Ports" title="Port specific news">Ports</a>&nbsp;|&nbsp; 
      <a href="/roller-ui/login-redirect.rol"><span>Login</span></a>
  			</div>
		</div>
		<div id="content">
			<div class="rowOfBoxes">
				<div class="quarter noBorderOnLeft borderOnRight sideBarLeft">

                                                <h3>Bookmarks</h3>
                                                                                                <ul class="rFolder">
                    <li class="rFolderItem">
                                <a href="http://www.NetBSD.org/"
               title="NetBSD is a free, secure, and highly portable Unix-like Open Source operating system available for many platforms, from large-scale server systems to powerful desktop systems to handheld and embedded devices."
               class="rBookmark0">The NetBSD Project</a>
                </li>
            <li class="rFolderItem">
                                <a href="http://wiki.netbsd.org/"
               title="The NetBSD Wiki is a collaborative writing project to build useful resources for NetBSD users."
               class="rBookmark0">NetBSD Wiki</a>
                </li>
                    </ul>
	
						<h3>Feeds</h3>
						    <ul class="rFeeds">
    <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom">All</a></li>
                <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FGeneral">/General</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FRelease+engineering">/Release engineering</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FNetworking">/Networking</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FDevelopment">/Development</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FEvents">/Events</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FThe+NetBSD+Foundation">/The NetBSD Foundation</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPackages">/Packages</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FSecurity">/Security</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPorts">/Ports</a></li>
        <li><a href="http://blog.netbsd.org/tnf/feed/comments/atom">Comments</a></li>
    </ul>

			</div>
			</div>
			<div class="mainContent">
				<div class="half noBorderOnLeft" style="border-left: 1px dotted #000">
							  		              <h2><a href="http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for">A Rump Kernel Hypervisor for the Linux Kernel</a></h2><BR>
<div class="descr">April 23, 2013 posted by <i>Antti Kantee</I></div><BR>

  <p>
Ever since I realized that the
<a href="http://www.netbsd.org/docs/rump/">anykernel</a>
was the best way to construct a modern general purpose operating system
kernel, I have been performing experiments by running unmodified
NetBSD kernel drivers in <i>rump kernels</i> in various environments
(nb. here <i>driver</i> does not mean a hardware device driver, but
any driver like a file system driver or TCP driver).
These experiments have included <a
href="https://github.com/anttikantee/buildrump.sh">userspaces of various platforms</a>,
<a href="https://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable">binary kernel modules on Linux</a>
and
<a href="https://twitter.com/anttikantee/status/314153384548638720">others</a>, and
<a href="https://blog.netbsd.org/tnf/entry/kernel_drivers_compiled_to_javascript">compiling kernel drivers to javascript</a>
and running them natively in a web browser.  I have also claimed that
the anykernel allows harnessing drivers from a general purpose OS
onto more specialized embedded computing devices which are becoming the
new norm.  This is an attractive possibility because while writing drivers
is easy, making them handle all the abnormal conditions of the real world
is a time-consuming process.  Since the above-mentioned experiments
were done on POSIX platforms (yes, even the javascript one), the
experiments did not fully support the claim.  The most interesting,
decidedly non-POSIX platform I could think of for experimentation was
the Linux kernel.  Even though it had been several years since I last
worked in the Linux kernel, my hypothesis was that it would be easy
and fast to get unmodified NetBSD kernel drivers running in the Linux kernel as rump kernels.
</p>

<p>
A rump kernel runs on top of the rump kernel hypervisor.  The hypervisor
provides high level interfaces to host features, such as memory allocation
and thread creation.  In this case, the Linux kernel is the host.
In principle, there are three steps in getting a rump kernel to run in
a given environment.  In reality, I prefer a more iterative approach,
but the development can be divided into three steps all the same.

<ol>
  <li>implement generic rump kernel hypercalls, such as memory allocation,
      thread creation and synchronization</li>
  <li>figure out how to compile and run the rump kernel plus hypervisor
      in the target environment</li>
  <li>implement I/O related hypercalls for whatever I/O you plan to do</li>
</ol>
</p>

<p>
Getting basic functionality up and running was a relatively
straightforward process.  The only issue that required some thinking was
an application binary interface (ABI) mismatch.  I was testing on x86 where Linux kernel ABI uses <tt>-mregparm=3</tt>,
which means that function arguments are passed in registers where
possible.  NetBSD always passes arguments on the stack.  When two ABIs
collide, the code may run, but since function arguments passed
between the two ABIs result in garbage, eventually an error
will be hit perhaps in the form of accessing invalid memory.
The C code was easy enough to "fix" by applying the appropriate compiler
flags.  In addition to C code, a rump kernel uses a handful of assembly
routines from NetBSD, mostly pertaining to optimizations (e.g. <tt>ffs()</tt>),
but also to access the atomic memory operations of the platform.
After assembly routines had been handled, it was possible
to load a <a href="https://github.com/anttikantee/rumpuser-linuxkernel/blob/master/main.c">Linux kernel module which bootstraps a
rump kernel</a> in the Linux kernel and <a href="https://github.com/anttikantee/rumpuser-linuxkernel/blob/master/demo-fs.c">does some
file system operations</a> on the fictional <i>kernfs</i> file system.
A screenshot of the resulting dmesg output is shown below.
</p>

<!-- no idea why you can't upload images onto the blog platform anymore ... -->
<img src="http://ftp.netbsd.org/pub/NetBSD/misc/pooka/images/fs-demo.png" alt="fs demo screenshot"/>

<p>
It is one thing to execute a computation and an entirely different
thing to perform I/O.  To test I/O capabilities, I ran a rump kernel
providing a TCP/IP driver inside the Linux kernel.  For a networking
stack to be able to do anything sensible, the interface layer needs
to be able to shuffle packets.  The quickest way to implement
the hypercalls for packet shuffling was to use the same method
as a userspace virtual TCP/IP stack might use: read/write packets using
the tap device.
Some might say that doing this from inside the kernel is cheating, but
given that the alternative was to copypaste the tuntap driver and
edit it slightly, I call my approach constructive laziness.
</p>

<p>
The <a href="https://github.com/anttikantee/rumpuser-linuxkernel/blob/master/demo-net.c">demo itself</a> opens a TCP socket to port 80 on
vger.kernel.org (IP address 0x43b484d1 if you want to be really precise),
does a HTTP get for "/" and displays the last 500 bytes of the result.
TCP/IP is handled by the rump kernel, not by the Linux kernel.
Think of it as the Linux kernel having two alternative TCP/IP stacks.
Again, a screenshot of the resulting dmesg is shown below.  Note that
unlike in the first screenshot, there is no printout for the root file
system because the configuration used here does not include any file
system support.  Yes, you can ping <i>10.0.2.17</i>.
</p>

<img src="http://ftp.netbsd.org/pub/NetBSD/misc/pooka/images/netdemo.png" alt="net demo screenshot"/>

<p>
As hypothesized, a rump kernel hypervisor for the Linux kernel
was easy and straightforward to implement.  Furthermore, it could be done
without making any changes to the existing hypercall interface thereby
reinforcing the belief that unmodified NetBSD kernel drivers can run
on top of most any embedded firmwares just by implementing a light
hypervisor layer.
</p>

<p>
There were no challenges in the experiment, only annoyances.
As Linux does not support rump kernels, I had to revert back to
the archaic full OS approach to kernel development.  The drawbacks of
the full OS approach include for example suffering multi-second
reboot cycles during iterative development.  The other tangential issue
that I spent a disproportionately large amount of time with was thinking
about how releasing this code would affect existing NetBSD code due
to GPL involvement.  My conclusion was that this does not matter since
all code used by the current demo is open source anyway, and if someone
wants to use my code in a product, it is their problem, not mine.
</p>

<p>
For people interested in examining the implementation, I put the
source code for the hypervisor along with the test code in a git repo
<a href="https://github.com/anttikantee/rumpuser-linuxkernel">here</a>.
The repository also contains the demos linked from
this article.  The NetBSD kernel drivers I used are available from <a
href="http://ftp.netbsd.org/pub/NetBSD/">ftp.netbsd.org</a> or by
getting <a href="https://github.com/anttikantee/buildrump.sh">buildrump.sh</a>
and running <tt>./buildrump.sh checkout</tt>.
</p>


   [<a href="http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for#comments">2 comments</a>]
 
</p>

<p>
<script type="text/javascript">
digg_url = 'http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for';
digg_title = 'A Rump Kernel Hypervisor for the Linux Kernel';
digg_skin = 'compact';
digg_window = 'new';
</script>
<script src="http://digg.com/tools/diggthis.js" type="text/javascript"></script>

<!--
<img src="http://images.slashdot.org/favicon.ico" alt="Slashdot" border="0" height="16" width="16">
<a href="javascript:location.href='http://slashdot.org/slashdot-it.pl?op=basic&amp;url='+encodeURIComponent(http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for)">Slashdot It!</a>
-->
</p>

<p>&nbsp;</p>

    		  <div class="next-prev">
		  		                                 &laquo; <a href="http://blog.netbsd.org/tnf/entry/pointers_to_rpi_docs_and">pointers to rpi docs...</a> |  
                <a href="/tnf/">Main</a>
                | <a href="http://blog.netbsd.org/tnf/entry/thylacine_usb_driver">Thylacine USB driver</a> &raquo;
    		  		  </div>
		  		     <br/><br/>
		     		         <a name="comments"></a>
    <div class="comments" id="comments">

            <div class="comments-head">Comments:</div>
            
    <br/>
                        <a name="comment-1366917891000" id="comment-1366917891000"></a>
            <div class="comment odd" id="comment1">

                I don't think you can view it as open source trumping all other forms of licenses. You could run a script over your code to put in GPL license headers on it, with a COPYING license file in place and perhaps have a friend maintain a git repo for that branch. 

Do you think this rump approach will be similar to the impact modules had for development ease? Essentially a programmable or custom fitting virtual machine.


                <p class="comment-details">
                Posted by
                                    <a rel="nofollow" href="http://www.phrasep.com/~lvecsey"><b>Lester Vecsey</b></a>
                
                on April 25, 2013 at 07:24 PM UTC

                <a href="http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for#comment-1366917891000"
                   class="entrypermalink" title="comment permalink">#</a>
                </p>

            </div>

                                <a name="comment-1366971748000" id="comment-1366971748000"></a>
            <div class="comment even" id="comment2">

                Everything that is a derivative work of the Linux kernel is already licensed under GPL. Section 4.5 of my dissertation discusses the advantages of rump kernels in development. You can find a pdf link from netbsd.org/docs/rump/ (the pdf's URL is inconveniently long).

                <p class="comment-details">
                Posted by
                                    <b>Antti Kantee</b>
                
                on April 26, 2013 at 10:22 AM UTC

                <a href="http://blog.netbsd.org/tnf/entry/a_rump_kernel_hypervisor_for#comment-1366971748000"
                   class="entrypermalink" title="comment permalink">#</a>
                </p>

            </div>

                </div>
		     		     
    <div class="comments-form">
    <div class="comments-head">Post a Comment:</div>
    <a name="comment-form"></a>

    <span class="status">Comments are closed for this entry.</span>

    </div>
		  				</div>
			</div>
			<div class="clearer"></div>
		</div>
		<div class="rowOfBoxes">
			<div id="footer">
				<span class="footfeed"><a href="http://www.NetBSD.org/cgi-bin/feedback.cgi">Contact</a> |</span> <span class="footcopy"><a href="http://www.NetBSD.org/about/disclaimer.html">Disclaimer</a> | <span class="copyright">Copyright © 1994-2009 The NetBSD Foundation, Inc.</span> ALL RIGHTS RESERVED.<br />
				NetBSD<sup>®</sup> is a registered trademark of The NetBSD Foundation, Inc.</span>
			</div>
		</div>
	</body>
</html>

