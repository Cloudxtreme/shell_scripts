<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Tarsnap - The kivaloo data store</title>
<link rel="stylesheet" type="text/css" title="Default style" href="tarsnap.css">
<link rel="canonical" href="http://www.tarsnap.com/kivaloo.html">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="description" content="Tarsnap is a secure online backup system for Linux, BSD, OS X, and other UNIX-like operating systems">
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-10889726-1']);
  _gaq.push(['_trackPageview']);
  (function() {
    if("http:" == document.location.protocol) {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = 'http://www.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    }
  })();
</script>
</head>
<body>
<div class="banner">
<h1><a href="http://www.tarsnap.com/">Tarsnap</a></h1>
<p class="tagline">Online backups for the truly paranoid</p>
<a href="#nav" style="display: none">Navigation menu</a>
</div>
<div class="nonbanner">
<div class="main">
<div class="onecol">
  <div class="box">
    <h3 class="doc">The kivaloo data store</h3>
    <div class="boxcontents">
      <p>
	Kivaloo (pronounced "kee-va-lieu") is a collection of utilities which
	together form a data store associating keys of up to 255 bytes with
	values of up to 255 bytes.  It was designed to satisfy the needs of
	the <a href="http://www.tarsnap.com/">Tarsnap online backup
	service</a> for high-performance key-value storage, although it is
	not yet being used for that purpose.
      </p>
      <p>
	At present, kivaloo comprises a block store (lbs) providing
	log-structured storage within a local filesystem; a key-value store
	(kvlds) which manages a log-structured B+Tree and services requests
	upon it from a single connection; and a request multiplexer (mux)
	which accepts multiple connections and routes requests and responses
	to and from a single "upstream" connection.
      </p>
      <p>
	It is likely that other components will be added in the future to
	add more features (e.g., replication) or provide alternatives (e.g.,
	other forms of underlying storage).
      </p>
      <h4>Features</h4>
      <p>
	Kivaloo has some features which distinguish it from most other
	"nosql" data stores:
      </p>
      <ul><li>
	Kivaloo is durable: Writes are not acknowledged until data has been
	fsynced to disk.  (The lbs utility supports a "data loss mode"
	which skips fsyncing for debugging purposes.)
      </li><li>
	Kivaloo is strongly consistent: If operation A completes before
	operation B starts, operation B will see the results of operation A.
      </li><li>
        Unlike most data stores based on log-structured storage, the kvlds
	utility performs background cleaning based on the I/O rate and the
	amount of disk space used; thus there is no need to for separate
	periodic "compaction" to be performed.
      </li><li>
	Due to the use of a B+Tree to store key-value pairs, kivaloo supports
	"RANGE" requests.
      </li></ul>
      <h4>Performance</h4>
      <p>
	On an <a href="http://aws.amazon.com/ec2/">EC2</a> c1.medium instance
	using ephemeral-disk storage, with a 2 kB B+Tree page size and
	40-byte keys and 40-byte values:
      </p>
      <ul><li>
	Bulk inserts run at about 125,000 pairs per second.
      </li><li>
	Bulk extracts run at about 30,000 pairs per second while in RAM, and
	about 20,000 pairs per second from disk.
      </li><li>
	Bulk updates run at about 110,000 pairs per second while in RAM, drop
	to about 75,000 pairs per second while pages are in the operating
	system disk cache, and then to 60,000 pairs per second when the keys
	being updated need to be loaded from disk.
      </li><li>
	Random reads run at about 160,000 to 220,000 pairs per second while in
	RAM, drop to about 6,000 to 11,000 pairs per second while pages are in
	the operating system disk cache, and are disk-seek-limited when pages
	need to be loaded from disk.
      </li><li>
	Random mixed (50% read, 50% update) runs at about 14,000 to 30,000
	pairs per second while in RAM, drops to around 1,000 to 4,000 pairs
	per second while in the operating system disk cache, and is
	disk-seek-limited when pages need to be loaded from disk.
      </li><li>
	Hot-spot read (pick a random set of 65536 consecutive keys, read them
	in a random order, and repeat &mdash; this is similar to one of
	<a href="http://www.tarsnap.com/">Tarsnap</a>'s read access patterns)
	runs at about 220,000 pairs per second while in RAM, and about 60,000
	pairs per second from disk.
      </li></ul>
      <p>
	For more details, see the <a href="kivaloo-perf.html">kivaloo
	performance</a> page.
      </p>
      <h4>Download</h4>
      <p>
	The following versions of kivaloo are available:
      </p>
      <table border=1 cellpadding=2 cellspacing=0><tr>
	<td>Version</td>
	<td>Release date</td>
	<td>SHA256 hash</td>
      </tr><tr>
	<td><a href="kivaloo/kivaloo-1.2.0.tgz">kivaloo 1.2.0</a></td>
	<td>2011-10-11</td>
	<td><tt>7c15d63493790b5480206ed25d4093a78bb271ce8198080a5601d6155e4eeccf</tt></td>
      </tr><tr>
	<td><a href="kivaloo/kivaloo-1.1.2.tgz">kivaloo 1.1.2</a></td>
	<td>2011-09-26</td>
	<td><tt>6097a4635284f1d0cb238eca6ee067a933206d645eef38c5ab37fe545ce6cd36</tt></td>
      </tr><tr>
	<td><a href="kivaloo/kivaloo-1.1.1.tgz">kivaloo 1.1.1</a></td>
	<td>2011-06-11</td>
	<td><tt>07230b52fe0d3a21bcf90622445177444b9b11ceec296e756627f68cc8d9a7af</tt></td>
      </tr><tr>
	<td><a href="kivaloo/kivaloo-1.1.0.tgz">kivaloo 1.1.0</a></td>
	<td>2011-04-10</td>
	<td><tt>e70cc7bec054c049e0f9d34ab00023438abacecfe28886792e19ae888589ca77</tt></td>
      </tr><tr>
	<td><a href="kivaloo/kivaloo-1.0.1.tgz">kivaloo 1.0.1</a></td>
	<td>2011-03-28</td>
	<td><tt>54145e602c16595e05133fb701270f2025f16bca04e45766f6635acb61e609e2</tt></td>
      </tr><tr>
	<td><a href="kivaloo/kivaloo-1.0.0.tgz">kivaloo 1.0.0</a></td>
	<td>2011-03-28</td>
	<td><tt>46abf63e8b8b75f441a822c4e1a04083fec578f4e936fe51c8203a524c75d124</tt></td>
      </tr></table>
      <h4>Mailing list</h4>
      <p>
	The <tt>kivaloo</tt> data store is discussed on the
	<a href="lists.html">kivaloo@tarsnap.com</a> mailing list.
      </p>
    </div>
  </div>
</div>
</div>
<div class="leftmargin"><div class="nav" id="nav"><ul class="navtop"><li><a href="index.html">Tarsnap</a></li><li><a href="design.html">Design</a></li><li><a href="https://www.tarsnap.com/download.html">Download</a></li><li><a href="documentation.html">Documentation</a><ul><li><a href="gettingstarted.html">Getting started</a></li><li><a href="usage.html">General usage</a></li><li><a href="man.html">Man pages</a></li><li><a href="technical.html">Technical details</a><ul><li><a href="picoUSD-why.html">picodollars</a></li><li><a href="GB-why.html">1 GB = 10^9 bytes</a></li><li><a href="crypto.html">cryptography</a></li><li><a href="scrypt.html">scrypt</a></li><li><a class="current" href="kivaloo.html">kivaloo</a></li><ul><li><a href="kivaloo-perf.html">performance</a></li></ul><li><a href="spiped.html">spiped</a></li></ul></li><li><a href="faq.html">FAQ</a></li></ul></li><li><a href="support.html">Support</a></li><li><a href="https://www.tarsnap.com/account.html">Accounts</a></li></ul></div></div></div>
</body></html>
