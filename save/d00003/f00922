<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
                 <link rel="shortcut icon" href="/tnf/resource/favicon.ico" type="image/x-icon"> 
		<title>
			NetBSD Blog
		</title>
                <link rel="stylesheet" type="text/css" href='/tnf/resource/global.css' />
		<link rel="stylesheet" type="text/css" href='/tnf/page/custom.css' />
	</head>
	<body>
		
			        
            <link rel="alternate" type="application/atom+xml" title="Recent Entries (Atom)"  href="http://blog.netbsd.org/tnf/feed/entries/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Entries (RSS)"   href="http://blog.netbsd.org/tnf/feed/entries/rss" />
    <link rel="alternate" type="application/atom+xml" title="Recent Comments (Atom)" href="http://blog.netbsd.org/tnf/feed/comments/atom" />
    <link rel="alternate" type="application/rss+xml"  title="Recent Comments (RSS)"  href="http://blog.netbsd.org/tnf/feed/comments/rss" />

    
                <link rel="search"
            title="OpenSearch Descriptor for weblog NetBSD Blog"
            type="application/opensearchdescription+xml"
            href="http://blog.netbsd.org/roller-services/opensearch/tnf" />
    		
		<div id="header">
			<div class="topNavigation">
				<span>&raquo;</span> <a href="http://www.NetBSD.org/docs/guide/en/">The Guide</a> | <a href="http://man.NetBSD.org">Manual pages</a> | <a href="http://www.NetBSD.org/mailinglists/">Mailing lists</a> and <a href="http://mail-index.NetBSD.org/">Archives</a> | <a href="http://cvsweb.NetBSD.org/">CVS repository</a> | <a href="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">Report</a> or <a href="http://gnats.NetBSD.org/">query</a> a bug | <a href="http://www.NetBSD.org/docs/software/packages.html">Software Packages</a>
			</div>
			<div class="centralHeader">
				<a href="/"><img src="/tnf/resource/NetBSD-headerlogo.png" alt="[NetBSD Logo]" width="506" height="90" /></a>
				<div class="headerTools">
<BR>
					<div id="headerSearch">
						<form method="get" action="/tnf/search">
							<input class="whiteOnBlack" type="text" name="q" onfocus="if(this.value==this.defaultValue ) this.value='';" size="12" maxlength="255" value="Search" /> <input type="submit" value="Search" />
						</form>
					</div>
				</div>
			</div>
			<div class="navBar">
				<a href="http://blog.netbsd.org/tnf/" title="Home">Home</a>&nbsp;|&nbsp;
                                <img src="/tnf/resource/feed-icon-14x14.png" border=0 align="absmiddle"><a href="http://blog.netbsd.org/tnf/feed/entries/atom">RSS</a>&nbsp;|&nbsp;
 <a href="http://blog.netbsd.org/tnf/category/General" title="General">General</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Release+engineering" title="Blog about NetBSD release engineering.">Release engineering</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Networking" title="">Networking</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Development" title="About NetBSD development.">Development</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Events" title="Upcoming and past events.">Events</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/The+NetBSD+Foundation" title="TNF articles.">The NetBSD Foundation</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Packages" title="The most portable package software in the world.">Packages</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Security" title="Security advisories and security related information.">Security</a>&nbsp;|&nbsp;  <a href="http://blog.netbsd.org/tnf/category/Ports" title="Port specific news">Ports</a>&nbsp;|&nbsp; 
      <a href="/roller-ui/login-redirect.rol"><span>Login</span></a>
  			</div>
		</div>
		<div id="content">
			<div class="rowOfBoxes">
				<div class="quarter noBorderOnLeft borderOnRight sideBarLeft">

                                                <h3>Bookmarks</h3>
                                                                                                <ul class="rFolder">
                    <li class="rFolderItem">
                                <a href="http://www.NetBSD.org/"
               title="NetBSD is a free, secure, and highly portable Unix-like Open Source operating system available for many platforms, from large-scale server systems to powerful desktop systems to handheld and embedded devices."
               class="rBookmark0">The NetBSD Project</a>
                </li>
            <li class="rFolderItem">
                                <a href="http://wiki.netbsd.org/"
               title="The NetBSD Wiki is a collaborative writing project to build useful resources for NetBSD users."
               class="rBookmark0">NetBSD Wiki</a>
                </li>
                    </ul>
	
						<h3>Feeds</h3>
						    <ul class="rFeeds">
    <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom">All</a></li>
                <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FGeneral">/General</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FRelease+engineering">/Release engineering</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FNetworking">/Networking</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FDevelopment">/Development</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FEvents">/Events</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FThe+NetBSD+Foundation">/The NetBSD Foundation</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPackages">/Packages</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FSecurity">/Security</a></li>
            <li><a href="http://blog.netbsd.org/tnf/feed/entries/atom?cat=%2FPorts">/Ports</a></li>
        <li><a href="http://blog.netbsd.org/tnf/feed/comments/atom">Comments</a></li>
    </ul>

			</div>
			</div>
			<div class="mainContent">
				<div class="half noBorderOnLeft" style="border-left: 1px dotted #000">
							  		              <h2><a href="http://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable">NetBSD binary kernel modules usable on Linux in rump kernels</a></h2><BR>
<div class="descr">December 13, 2012 posted by <i>Antti Kantee</I></div><BR>

  <p>
Some years ago I <a href="http://blog.netbsd.org/tnf/entry/kernel_modules_autoload_from_host">wrote</a> about the possibility to load and use
standard NetBSD kernel modules in <a href="http://www.NetBSD.org/docs/rump/">rump kernels</a> on i386 and amd64.
With the recent developments in <a href="https://github.com/anttikantee/buildrump.sh">buildrump.sh</a> and the improved
ability to host rump kernels on non-NetBSD platforms, I decided to try
loading a binary NetBSD kernel module into a rump kernel compiled for
and running on Linux.  The hypothesis was that the NetBSD kernel modules
should just work since both the NetBSD kernel and Linux processes use
the ELF calling convention, and all platform details are abstracted by
the rump kernel hypercall layer.  Sure enough, after two small fixes to
the hypervisor I could mount and access a FFS file system on Linux by
using <tt>ffs.kmod</tt> as the driver.
</p>

<p>
There is an extra twist for having kernel module binaries work in userspace on amd64.
The kernel and kernel modules are compiled with -mcmodel=kernel, which
produces code with 32bit offsets.  When kernel code is loaded into the
top 2GB of the 64bit VAS, sign extension of the addresses gives the correct absolute
VA at runtime.  We work around this limitation by loading the kernel
module into the lowest 2GB.  The rest of the rump kernel must reside in
the lowest 2GB as well or otherwise the kernel module will not be able
to make any calls into the rest of the rump kernel, e.g. to allocate memory with <tt>kmem_alloc()</tt>.
In the instructions below, we adhere to the amd64 2GB limitation by linking
all rump kernel components statically so that they get loaded with text
instead of with solibs (use <tt>/proc/*/maps</tt> or <tt>pmap(1)</tt> to
check out what a process's memory map looks like).
</p>

<p>
The following mini-howto explains how to "do try this at home" on a amd64 or i386 Linux host.  Note that
ffs.kmod is not included in the build process.  It is dynamically loaded
and linked into the rump kernel at runtime.  It is also possible to let
ld(1) do the linking of ffs.kmod, though in that case one detail is left
as an exercise for the reader.  Of course, using the FFS .so rump kernel
component produced by buildrump.sh is also possible, and does not impose
the 2GB limitation of kernel modules, but there is no adventure there ...
</p>

<ol>
<li>Get <a href="https://github.com/anttikantee/buildrump.sh">buildrump.sh</a>
   and run it to get the rump kernel components
   built.  Note: you will need a NetBSD-current source tree of at least
   20121213 1800 UTC.</li>

<li>Get the kernel module binary: ffs.kmod is in modules.tgz.  You can use
   a <a href="http://ftp.netbsd.org/pub/NetBSD-daily">daily snapshot</a>.
   For example, I used <a href="http://nyftp.netbsd.org/pub/NetBSD-daily/HEAD/201212122310Z/amd64/binary/sets/modules.tgz">this</a> for amd64.  Note that daily snapshots
   are available only for a few days after being built, so if the example
   I gave has expired, find a new one starting from the top-level
   daily snapshot directory.  In any case, you'll need modules.tgz with roughly the same
   timestamp as the source tree you used in step 1 to ensure both contain
   the same kernel API version number.  Extract modules.tgz and copy
   stand/arch/version/modules/ffs/ffs.kmod into a working directory.</li>

<li>Prepare a test FFS image into "ffs.img".  You can use either
   e.g. <a href="http://man.NetBSD.org/cgi-bin/man-cgi?makefs++NetBSD-current">makefs</a> or you can download the small image I prepared for
   this demo from <a href="http://ftp.NetBSD.org/pub/NetBSD/misc/pooka/ffs.img">here</a>.  Note: the image is modified by the
   test program, so don't use any image you can't risk losing.</li>

<li>Copypaste the source code from below into test.c.  Modify it if
   necessary.</li>

<li>Compile with (adjust the paths if necessary): <tt>cc test.c -Irump/include -Lrump/lib -Wl,-Rrump/lib -Wl,--whole-archive rump/lib/librumpdev_disk.a rump/lib/librumpdev.a rump/lib/librumpvfs.a rump/lib/librump.a -Wl,--no-whole-archive -lrumpuser -lpthread -ldl -Wl,-E -o test  -Wall</tt></li>

<li>cross fingers and run <tt>./test</tt></li>
</ol>

<p>
The test code follows:
</p>

<p>
<pre>
#include &lt;sys/types.h&gt;

#include &lt;err.h&gt;
#include &lt;inttypes.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

#include &lt;rump/rump.h&gt;
#include &lt;rump/rump_syscalls.h&gt;

int
main()
{
        char buf[8192];
        struct rump_modctl_load ml;
        struct rump_ufs_args umnt;
        int fd;

        /* bootstrap rump kernel */
        setenv("RUMP_VERBOSE", "1", 1);
        rump_init();

        /* register host files to rump kernel */
        rump_pub_etfs_register("/ffsmod", "./ffs.kmod", RUMP_ETFS_REG);
        rump_pub_etfs_register("/ffsimg", "./ffs.img", RUMP_ETFS_BLK);

        /* load FFS kernel module into the rump kernel */
        memset(&ml, 0, sizeof(ml));
        ml.ml_filename = "/ffsmod";
        if (rump_sys_modctl(0, &ml) == -1)
                errx(1, "modctl");

        /* mount file system image (r/w) */
        if (rump_sys_mkdir("/mnt", 0755) == -1)
                errx(1, "mkdir /mnt");
        memset(&umnt, 0, sizeof(umnt));
        umnt.fspec = "/ffsimg";
        if (rump_sys_mount("ffs", "/mnt", 0, &umnt, sizeof(umnt)) == -1)
                errx(1, "mount");

        /* check mount works by reading a file that we "guess" exists */
        fd = rump_sys_open("/mnt/a_directory/README", RUMP_O_RDWR);
        if (fd == -1) {
                warnx("open");
                goto reboot;
        }
        memset(buf, 0, sizeof(buf));
        rump_sys_read(fd, buf, sizeof(buf));
        printf("=== Displaying file contents:\n%s=== EOF\n", buf);

        /* be sneaky: replace string */
#define TESTSTR "You already read me.  You need a real hobby instead of this.\n"
        rump_sys_ftruncate(fd, 0);
        rump_sys_pwrite(fd, TESTSTR, strlen(TESTSTR), 0);

        /* reboot the rump kernel.  unmounts and exists */
 reboot:
        rump_sys_reboot(0, NULL);
        return 0; /* compiler whine */
}
</pre>
</p>

<p>
Thanks to Zafer Aydogan for providing access to the [very] fast machine on which it
was possible to perform the necessary hacking.
</p>

   [<a href="http://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable#comments">2 comments</a>]
 
</p>

<p>
<script type="text/javascript">
digg_url = 'http://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable';
digg_title = 'NetBSD binary kernel modules usable on Linux in rump kernels';
digg_skin = 'compact';
digg_window = 'new';
</script>
<script src="http://digg.com/tools/diggthis.js" type="text/javascript"></script>

<!--
<img src="http://images.slashdot.org/favicon.ico" alt="Slashdot" border="0" height="16" width="16">
<a href="javascript:location.href='http://slashdot.org/slashdot-it.pl?op=basic&amp;url='+encodeURIComponent(http://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable)">Slashdot It!</a>
-->
</p>

<p>&nbsp;</p>

    		  <div class="next-prev">
		  		                                 &laquo; <a href="http://blog.netbsd.org/tnf/entry/gnats_mail_index_outage">gnats, mail-index...</a> |  
                <a href="/tnf/">Main</a>
                | <a href="http://blog.netbsd.org/tnf/entry/netbsd_6_0_1_released">NetBSD 6.0.1 release...</a> &raquo;
    		  		  </div>
		  		     <br/><br/>
		     		         <a name="comments"></a>
    <div class="comments" id="comments">

            <div class="comments-head">Comments:</div>
            
    <br/>
                        <a name="comment-1355477980000" id="comment-1355477980000"></a>
            <div class="comment odd" id="comment1">

                As we learned in the past, the other way 'round, running Linux file systems on a rump kernel is more difficult.

Has the situation changed in some way?

To what extent does Linux emulation support on nbsd affect this use case?

As a note, the use case is using Linux file systems as-is on nbsd at the expense of some performance loss, which may or not be relevant in a given context.

Thank you.
Good work!
ADO


                <p class="comment-details">
                Posted by
                                    <b>ADO</b>
                
                on December 14, 2012 at 09:39 AM UTC

                <a href="http://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable#comment-1355477980000"
                   class="entrypermalink" title="comment permalink">#</a>
                </p>

            </div>

                                <a name="comment-1355572700000" id="comment-1355572700000"></a>
            <div class="comment even" id="comment2">

                Doing it the other way around is not more difficult, just unsupported.  Apart from my prototype five-or-so years ago, I'm not aware of work to convert Linux into an anykernel.  Linux system call emulation is not relevant, since it only translates syscall parameters and does not affect the backends that handle the system calls (i.e. the drivers).

                <p class="comment-details">
                Posted by
                                    <b>Antti Kantee</b>
                
                on December 15, 2012 at 11:58 AM UTC

                <a href="http://blog.netbsd.org/tnf/entry/netbsd_binary_kernel_modules_usable#comment-1355572700000"
                   class="entrypermalink" title="comment permalink">#</a>
                </p>

            </div>

                </div>
		     		     
    <div class="comments-form">
    <div class="comments-head">Post a Comment:</div>
    <a name="comment-form"></a>

    <span class="status">Comments are closed for this entry.</span>

    </div>
		  				</div>
			</div>
			<div class="clearer"></div>
		</div>
		<div class="rowOfBoxes">
			<div id="footer">
				<span class="footfeed"><a href="http://www.NetBSD.org/cgi-bin/feedback.cgi">Contact</a> |</span> <span class="footcopy"><a href="http://www.NetBSD.org/about/disclaimer.html">Disclaimer</a> | <span class="copyright">Copyright © 1994-2009 The NetBSD Foundation, Inc.</span> ALL RIGHTS RESERVED.<br />
				NetBSD<sup>®</sup> is a registered trademark of The NetBSD Foundation, Inc.</span>
			</div>
		</div>
	</body>
</html>

